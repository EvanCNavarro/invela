[TaskCenter] Filtering task: 
Object {taskId: 158, status: "submitted", scope: "company", activeTab: "my-tasks", userId: 134, …}
[TaskCenter] Filtering task: 
Object {taskId: 159, status: "in_progress", scope: "company", activeTab: "my-tasks", userId: 134, …}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(4), isLoadingCompany: false}
[WebSocket] Connected successfully
[TaskTable] Task clicked: 
Object {id: 159, title: "Company CARD: Bayzat", type: "company_card", status: "in_progress", metadata: {…}, …}
[TaskTable] Navigation preparation: 
Object {taskType: "company_card", originalTitle: "Company CARD: Bayzat", extractedCompanyName: "Bayzat", taskTypePrefix: "card", constructedUrl: "/task-center/task/card-Bayzat", …}
[TaskTable] Task validation: 
Object {hasMetadata: true, hasCompanyName: false, titleMatchResult: Array(3), formattedCompanyName: "Bayzat", timestamp: "2025-02-27T14:31:33.972Z"}
[TaskTable] Initiating navigation to: /task-center/task/card-Bayzat
[Router] Current location: /task-center/task/card-Bayzat
[TaskPage] Initializing with params: 
Object {taskSlug: "card-Bayzat", taskType: "card", companyName: "Bayzat"}
[TaskPage] Using API endpoint: 
Object {apiEndpoint: "/api/tasks/card", fullUrl: "/api/tasks/card/Bayzat"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(4), isLoadingCompany: false}
[TaskPage] Fetching task data: 
Object {endpoint: "/api/tasks/card/Bayzat", taskType: "card", companyName: "Bayzat"}
[TaskPage] API response: 
Object {status: 200, ok: true, statusText: "OK"}
[TaskPage] Task data received: 
Object {taskId: 159, title: "Company CARD: Bayzat", status: "in_progress", metadata: {…}}
[TaskPage] Initializing with params: 
Object {taskSlug: "card-Bayzat", taskType: "card", companyName: "Bayzat"}
[TaskPage] Using API endpoint: 
Object {apiEndpoint: "/api/tasks/card", fullUrl: "/api/tasks/card/Bayzat"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(4), isLoadingCompany: false}
[CardFormPlayground] Fetching CARD fields 
Object {timestamp: "2025-02-27T14:31:34.239Z"}
[CardFormPlayground] Fetching existing responses: 
Object {taskId: 159, timestamp: "2025-02-27T14:31:34.240Z"}
[WebSocket] Connected successfully
[CardFormPlayground] Loading existing responses: 
Object {responseCount: 90, timestamp: "2025-02-27T14:31:34.730Z"}
[CardFormPlayground] Handling submit: 
Object {formResponses: {…}, progress: 90, timestamp: "2025-02-27T14:31:37.779Z"}
[CardFormPlayground] Submitting assessment: 
Object {taskId: 159, timestamp: "2025-02-27T14:31:37.780Z"}
taskId: 159
timestamp: "2025-02-27T14:31:37.780Z"
[[Prototype]]: Object
[CardFormPlayground] Error submitting assessment: 
Object {error: Error, message: "null value in column "type" of relation "files" violates not-null constraint", timestamp: "2025-02-27T14:31:38.435Z"}
error: Error
message: "null value in column "type" of relation "files" violates not-null constraint"
timestamp: "2025-02-27T14:31:38.435Z"
[[Prototype]]: Object

[TaskPage] Initializing with params: 
Object {taskSlug: "card-Bayzat", taskType: "card", companyName: "Bayzat"}
[TaskPage] Using API endpoint: 
Object {apiEndpoint: "/api/tasks/card", fullUrl: "/api/tasks/card/Bayzat"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(4), isLoadingCompany: false}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(4), isLoadingCompany: false}
[TaskPage] Initializing with params: 
Object {taskSlug: "card-Bayzat", taskType: "card", companyName: "Bayzat"}
[TaskPage] Using API endpoint: 
Object {apiEndpoint: "/api/tasks/card", fullUrl: "/api/tasks/card/Bayzat"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(4), isLoadingCompany: false}