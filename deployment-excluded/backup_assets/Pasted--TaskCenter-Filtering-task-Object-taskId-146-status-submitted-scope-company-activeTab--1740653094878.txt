[TaskCenter] Filtering task: 
Object {taskId: 146, status: "submitted", scope: "company", activeTab: "my-tasks", userId: 130, …}
[TaskCenter] Filtering task: 
Object {taskId: 147, status: "pending", scope: "company", activeTab: "my-tasks", userId: 130, …}
[TaskCenter] Filtering task: 
Object {taskId: 148, status: "completed", scope: "user", activeTab: "my-tasks", userId: 130, …}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(2), isLoadingCompany: false}
[WebSocket] Connected successfully
[TaskTable] Task clicked: 
Object {id: 146, title: "Company KYB: SafetyWing", type: "company_kyb", status: "submitted", metadata: {…}, …}
[TaskTable] Opening modal for task: 
Object {id: 146, type: "company_kyb", status: "submitted", isSubmitted: true, timestamp: "2025-02-27T10:44:03.370Z"}
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.
[TaskTable] Task clicked: 
Object {id: 147, title: "Company CARD: SafetyWing", type: "company_card", status: "pending", metadata: {…}, …}
[TaskTable] Navigation preparation: 
Object {taskType: "company_card", originalTitle: "Company CARD: SafetyWing", extractedCompanyName: "SafetyWing", taskTypePrefix: "card", constructedUrl: "/task-center/task/card-SafetyWing", …}
[TaskTable] Task validation: 
Object {hasMetadata: true, hasCompanyName: true, titleMatchResult: Array(3), formattedCompanyName: "SafetyWing", timestamp: "2025-02-27T10:44:09.270Z"}
[TaskTable] Initiating navigation to: /task-center/task/card-SafetyWing
[Router] Current location: /task-center/task/card-SafetyWing
[TaskPage] Initializing with params: 
Object {taskSlug: "card-SafetyWing", taskType: "card", companyName: "SafetyWing"}
[TaskPage] Using API endpoint: 
Object {apiEndpoint: "/api/tasks/card", fullUrl: "/api/tasks/card/SafetyWing"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(2), isLoadingCompany: false}
[TaskPage] Fetching task data: 
Object {endpoint: "/api/tasks/card/SafetyWing", taskType: "card", companyName: "SafetyWing"}
[TaskPage] API response: 
Object {status: 200, ok: true, statusText: "OK"}
[TaskPage] Task data received: 
Object {taskId: 147, title: "Company CARD: SafetyWing", status: "pending", metadata: {…}}
[TaskPage] Initializing with params: 
Object {taskSlug: "card-SafetyWing", taskType: "card", companyName: "SafetyWing"}
[TaskPage] Using API endpoint: 
Object {apiEndpoint: "/api/tasks/card", fullUrl: "/api/tasks/card/SafetyWing"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(2), isLoadingCompany: false}
[CardFormPlayground] Fetching CARD fields 
Object {timestamp: "2025-02-27T10:44:09.535Z"}
[CardFormPlayground] Fetching existing responses: 
Object {taskId: 147, timestamp: "2025-02-27T10:44:09.536Z"}
[WebSocket] Connected successfully
[CardFormPlayground] Loading existing responses: 
Object {responseCount: 12, timestamp: "2025-02-27T10:44:09.849Z"}
[CardFormPlayground] Submitting form: 
Object {formResponses: {…}, progress: 11, timestamp: "2025-02-27T10:44:15.558Z"}
formResponses: Object
progress: 11
timestamp: "2025-02-27T10:44:15.558Z"
[[Prototype]]: Object
[CardFormPlayground] Submitting assessment: 
Object {taskId: 147, timestamp: "2025-02-27T10:44:15.559Z"}
[CardFormPlayground] Assessment submitted successfully: 
Object {data: {…}, timestamp: "2025-02-27T10:44:18.631Z"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(2), isLoadingCompany: false}