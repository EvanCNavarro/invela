> rest-express@1.0.0 dev
> tsx server/index.ts

Running database migrations...
[Migration] Starting database migrations
[Migration] Running security form tables migration
[DB Migration] Creating security form tables...
[EmailService] Initializing email service
[EmailService] Email service initialized successfully
[Auth] Setting up authentication...
[Auth] Authentication setup completed
[Routes] Routes setup completed
[WebSocket] Server initialized on path: /ws
4:22:48 AM [info] Setting up Vite development server
4:22:48 AM [express] Server running on port 5000
[2025-04-09T04:22:48.991Z] New client connected to the pool
[DB Migration] Security form tables created successfully.
[Migration] Populating security fields from card fields
[DB Migration] Populating security fields...
[DB Migration] Security fields already populated (25 fields exist)
[Migration] Updating existing task titles
[DB Migration] Updating existing task titles...
[DB Migration] Updated 0 KYB task titles
[DB Migration] Updated 0 Security Assessment task titles
[DB Migration] Updated 0 CARD task titles
[DB Migration] Task titles updated successfully
[Migration] Updating KYB form fields
[KYB Migration] Starting April 2025 KYB fields update migration
[KYB Migration] Verifying field groupings and order
[KYB Migration] Migration status: new fields present (2), tax fields to remove (0)
[KYB Migration] Updating existing fields
[KYB Migration] No fields to delete
[KYB Migration] Successfully updated KYB fields for April 2025 revision
[Migration] Adding task templates and component configurations
Adding task templates and configurations...
Error adding task templates: error: duplicate key value violates unique constraint "task_templates_task_type_key"
    at file:///home/runner/workspace/node_modules/@neondatabase/serverless/index.mjs:1345:74
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async NeonPreparedQuery.execute (/home/runner/workspace/node_modules/src/neon-serverless/session.ts:102:18)
    at async up (/home/runner/workspace/db/migrations/add_task_templates.ts:13:27)
    at async runMigrations (/home/runner/workspace/db/migrations/index.ts:39:5)
    at async <anonymous> (/home/runner/workspace/db/index.ts:112:5) {
  length: 242,
  severity: 'ERROR',
  code: '23505',
  detail: 'Key (task_type)=(company_kyb) already exists.',
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: 'public',
  table: 'task_templates',
  column: undefined,
  dataType: undefined,
  constraint: 'task_templates_task_type_key',
  file: 'nbtinsert.c',
  line: '666',
  routine: '_bt_check_unique'
}
[Migration] Migration failed: error: duplicate key value violates unique constraint "task_templates_task_type_key"
    at file:///home/runner/workspace/node_modules/@neondatabase/serverless/index.mjs:1345:74
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async NeonPreparedQuery.execute (/home/runner/workspace/node_modules/src/neon-serverless/session.ts:102:18)
    at async up (/home/runner/workspace/db/migrations/add_task_templates.ts:13:27)
    at async runMigrations (/home/runner/workspace/db/migrations/index.ts:39:5)
    at async <anonymous> (/home/runner/workspace/db/index.ts:112:5) {
  length: 242,
  severity: 'ERROR',
  code: '23505',
  detail: 'Key (task_type)=(company_kyb) already exists.',
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: 'public',
  table: 'task_templates',
  column: undefined,
  dataType: undefined,
  constraint: 'task_templates_task_type_key',
  file: 'nbtinsert.c',
  line: '666',
  routine: '_bt_check_unique'
}
Failed to run migrations: error: duplicate key value violates unique constraint "task_templates_task_type_key"
    at file:///home/runner/workspace/node_modules/@neondatabase/serverless/index.mjs:1345:74
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async NeonPreparedQuery.execute (/home/runner/workspace/node_modules/src/neon-serverless/session.ts:102:18)
    at async up (/home/runner/workspace/db/migrations/add_task_templates.ts:13:27)
    at async runMigrations (/home/runner/workspace/db/migrations/index.ts:39:5)
    at async <anonymous> (/home/runner/workspace/db/index.ts:112:5) {
  length: 242,
  severity: 'ERROR',
  code: '23505',
  detail: 'Key (task_type)=(company_kyb) already exists.',
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: 'public',
  table: 'task_templates',
  column: undefined,
  dataType: undefined,
  constraint: 'task_templates_task_type_key',
  file: 'nbtinsert.c',
  line: '666',
  routine: '_bt_check_unique'
}
New WebSocket client connected
[Auth] Unauthenticated user session
WebSocket client disconnected with code 1001 and reason: 
[2025-04-09T04:23:04.605Z] New client connected to the pool
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[2025-04-09T04:23:04.901Z] New client connected to the pool
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[2025-04-09T04:23:05.258Z] New client connected to the pool
[2025-04-09T04:23:05.266Z] New client connected to the pool
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[2025-04-09T04:23:05.699Z] New client connected to the pool
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Returning user session data
New WebSocket client connected
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Tasks] ====== Starting task fetch =====
[Tasks] User details: { id: 199, company_id: 160, email: 'eva.n.cnava.r.r.o@gmail.com' }
[Current Company] Fetching company for user: { userId: 199, companyId: 160 }
[Network Visualization] Fetching network data for company: 160
[Tasks] KYB tasks found: { count: 1 }
[Tasks] Query conditions: {
  conditions: {
    condition1: 'tasks.assigned_to = 199',
    condition2: 'tasks.created_by = 199',
    condition3: "tasks.company_id = 160 AND tasks.assigned_to IS NULL AND tasks.task_scope = 'company'",
    condition4: "tasks.task_type = 'user_onboarding' AND LOWER(tasks.user_email) = LOWER('eva.n.cnava.r.r.o@gmail.com')"
  }
}
[Current Company] Found company: { id: 160, name: 'Ramp', onboardingCompleted: false, riskScore: null }
[Tasks] Tasks found: { count: 4 }
4:23:09 AM [info] GET /api/companies/current 200 in 60ms :: {"id":160,"name":"Ramp","description":"FinTech partner company Ramp","categor...
[Network Visualization] Found network relationships: { count: 2 }
[Network Visualization] Returning visualization data: { centerNode: 'Ramp', nodeCount: 2 }
4:23:09 AM [info] GET /api/tasks 304 in 91ms :: [{"id":310,"title":"1. KYB Form: Ramp","description":"Complete KYB verificati...
4:23:09 AM [info] GET /api/network/visualization 304 in 94ms :: {"center":{"id":160,"name":"Ramp","riskScore":0,"riskBucket":"low","accredita...
New WebSocket client connected
[Auth] Deserializing user: 199
[Tasks] ====== Starting task fetch =====
[Tasks] User details: { id: 199, company_id: 160, email: 'eva.n.cnava.r.r.o@gmail.com' }
[Tasks] KYB tasks found: { count: 1 }
[Tasks] Query conditions: {
  conditions: {
    condition1: 'tasks.assigned_to = 199',
    condition2: 'tasks.created_by = 199',
    condition3: "tasks.company_id = 160 AND tasks.assigned_to IS NULL AND tasks.task_scope = 'company'",
    condition4: "tasks.task_type = 'user_onboarding' AND LOWER(tasks.user_email) = LOWER('eva.n.cnava.r.r.o@gmail.com')"
  }
}
[Tasks] Tasks found: { count: 4 }
4:23:10 AM [info] GET /api/tasks 304 in 95ms :: [{"id":310,"title":"1. KYB Form: Ramp","description":"Complete KYB verificati...
[Auth] Deserializing user: 199
[Auth] Deserializing user: 199
[Current Company] Fetching company for user: { userId: 199, companyId: 160 }
[Tasks] ====== Starting task fetch =====
[Tasks] User details: { id: 199, company_id: 160, email: 'eva.n.cnava.r.r.o@gmail.com' }
[Current Company] Found company: { id: 160, name: 'Ramp', onboardingCompleted: false, riskScore: null }
[Tasks] KYB tasks found: { count: 1 }
[Tasks] Query conditions: {
  conditions: {
    condition1: 'tasks.assigned_to = 199',
    condition2: 'tasks.created_by = 199',
    condition3: "tasks.company_id = 160 AND tasks.assigned_to IS NULL AND tasks.task_scope = 'company'",
    condition4: "tasks.task_type = 'user_onboarding' AND LOWER(tasks.user_email) = LOWER('eva.n.cnava.r.r.o@gmail.com')"
  }
}
4:23:15 AM [info] GET /api/companies/current 304 in 64ms :: {"id":160,"name":"Ramp","description":"FinTech partner company Ramp","categor...
[Tasks] Tasks found: { count: 4 }
4:23:15 AM [info] GET /api/tasks 304 in 89ms :: [{"id":310,"title":"1. KYB Form: Ramp","description":"Complete KYB verificati...