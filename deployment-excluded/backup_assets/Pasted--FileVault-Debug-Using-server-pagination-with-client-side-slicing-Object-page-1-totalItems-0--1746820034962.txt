[FileVault Debug] Using server pagination with client-side slicing: 
Object {page: 1, totalItems: 0, itemsPerPage: 5, startIdx: 0, endIdx: 0, …}
[FileTable Debug] Component mounted/updated: 
Object {dataLength: 0, firstItem: undefined, selectedItemsCount: 0, isLoading: false}
[FileVault Debug] Component state updated: 
Object {hasFiles: false, isLoading: false, serverPagination: {…}, userContext: {…}, timestamp: "2025-05-09T19:40:52.461Z"}
[SidebarTab] Clicked Claims tab, href=/claims, isDisabled=false
[Router] Current location: /claims
[WebSocketEventBridge] Cleaning up event bridge
[Sidebar] Available tabs updated: 
Object {tabs: Array(8), hasFileVault: true, hasDashboard: true, hasTaskCenter: true, currentRoute: "/claims", …}
[Sidebar] Tab state check: company=1, path=/claims, file-vault-unlocked=true
[CurrentCompany] Setting company context: 1
[ONBOARDING DEBUG] WelcomeModal user data received: 
Object {userId: 8, email: "evan.navarro@invela.com", onboardingCompleted: true, userObject: "{↵  "id": 8,↵  "email": "evan.navarro@invela.com",↵  "full_name": "Evan Navarro",↵ …"}
[ONBOARDING DEBUG] User is already marked as onboarded in user object
[WebSocketEventBridge] Initializing event bridge
[WebSocketEventBridge] Successfully subscribed to WebSocket events
[SidebarTab] Clicked S&P DARS tab, href=/risk-score-configuration, isDisabled=false
[Router] Current location: /risk-score-configuration
[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: false, isLoading: true, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: false, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[WebSocketEventBridge] Cleaning up event bridge
[Sidebar] Available tabs updated: 
Object {tabs: Array(8), hasFileVault: true, hasDashboard: true, hasTaskCenter: true, currentRoute: "/risk-score-configuration", …}
[Sidebar] Tab state check: company=1, path=/risk-score-configuration, file-vault-unlocked=true
[CurrentCompany] Setting company context: 1
[TutorialManager] Checking if tutorial exists for tab: risk-score-configuration
[TutorialManager] Fetching tutorial status for tab: risk-score-configuration
[TutorialManager] Status URL: /api/user-tab-tutorials/risk-score-configuration/status
[API Request] GET /api/user-tab-tutorials/risk-score-configuration/status without body data 
[TabTutorials] Fetching tutorial status for: risk-score-configuration
[API Request] GET /api/user-tab-tutorials/risk-score-configuration/status without body data 
[WebSocket] Connecting to WebSocket: wss://9606074c-a9ad-4fe1-8fe5-3d9c3eed0606-00-33ar2rv36ligj.picard.replit.dev/ws
Direct console log - RiskScoreConfigurationPage mounted
[RiskScore]:init Risk score configuration page initialized
[RiskScore]:init Forcing fresh data load on page initialization
[RiskScore]:fetch:service Fetching fresh priorities data from server
[RiskPriorities API] GET /api/risk-score/priorities Request: undefined
[RiskScore]:fetch:service Fetching fresh configuration data from server
[API Request] GET /api/risk-score/configuration without body data 
[TanStack Query] Fetching: /api/risk-score/priorities
[RiskScore]:weights Updated weight distribution 1. Cyber Security (30%), 2. Financial Stability (25%), 3. Dark Web Data (20%), 4. Public Sentiment (15%), 5. Potential Liability (7%), 6. Data Access Scope (3%)
[ONBOARDING DEBUG] WelcomeModal user data received: 
Object {userId: 8, email: "evan.navarro@invela.com", onboardingCompleted: true, userObject: "{↵  "id": 8,↵  "email": "evan.navarro@invela.com",↵  "full_name": "Evan Navarro",↵ …"}
[ONBOARDING DEBUG] User is already marked as onboarded in user object
[WebSocketEventBridge] Initializing event bridge
[WebSocketEventBridge] Successfully subscribed to WebSocket events
[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: false, isLoading: true, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: false, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[RiskPriorities API] GET /api/risk-score/priorities - Status: 200
[RiskPriorities API] GET /api/risk-score/priorities Success! Response: 
Object {dimensions: Array(6), lastUpdated: "2025-05-09T14:52:22.284Z", riskAcceptanceLevel: 45}
[RiskScore]:fetch:service Priorities data fetched and cache updated
[API Response] GET /api/risk-score/configuration - Status: 200
[RiskScore]:fetch:service Configuration data fetched and cache updated
[RiskScore]:init Fresh data load completed successfully
[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: false, isLoading: true, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: false, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[API Response] GET /api/user-tab-tutorials/risk-score-configuration/status - Status: 200
[TutorialManager] Tutorial status response: 
Object {exists: false, completed: false, currentStep: 0, tabName: "risk-score-configuration"}
[TutorialManager] Status response details: {"exists":false,"completed":false,"currentStep":0,"tabName":"risk-score-configuration"}
[TutorialManager] Creating new tutorial entry for tab: risk-score-configuration
[API Request] GET /api/user-tab-tutorials with body data 
Object {bodyPreview: "(Object)"}
[API Error] GET /api/user-tab-tutorials - Failed: 
TypeError {message: "Failed to execute 'fetch' on 'Window': Request with GET/HEAD method cannot have body."}

[TutorialManager] Error initializing tutorial: 
TypeError {message: "Failed to execute 'fetch' on 'Window': Request with GET/HEAD method cannot have body."}

[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: false, isLoading: true, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: false, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[TutorialManager] Initialization error: TypeError: Failed to execute 'fetch' on 'Window': Request with GET/HEAD method cannot have body.
Failed to execute 'fetch' on 'Window': Request with GET/HEAD method cannot have body.
[TanStack Query] Response for /api/risk-score/priorities: Status 200
[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: false, isLoading: true, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: false, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[RiskScore:gauge] Rendering with score: 50, level: medium
[RiskScore]:init Applying server data 
Object {dimensions: Array(6), lastUpdated: "2025-05-09T14:52:22.284Z", riskAcceptanceLevel: 45}
[RiskScore]:init Loaded user-set risk acceptance level: 45
[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: false, isLoading: true, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: false, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[RiskScore:gauge] Rendering with score: 45, level: medium
[API Response] GET /api/user-tab-tutorials/risk-score-configuration/status - Status: 200
[RiskScore]:weights Updated weight distribution 1. Potential Liability (30%), 2. Dark Web Data (25%), 3. Public Sentiment (20%), 4. Cyber Security (15%), 5. Financial Stability (7%), 6. Data Access Scope (3%)
[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: false, isLoading: true, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: false, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[RiskScore:gauge] Rendering with score: 45, level: medium
[TabTutorials] Received tutorial status for risk-score-configuration: 
Object {exists: false, completed: false, currentStep: 0, tabName: "risk-score-configuration"}
[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: false, isLoading: false, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: false, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[TabTutorials] Updating local state for risk-score-configuration: 
Object {exists: false, completed: false, currentStep: 0, tabName: "risk-score-configuration"}
[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: true, isLoading: false, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: true, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: true, isLoading: false, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: true, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[WebSocket] Connection established
[WebSocket] Sending authentication message 
Object {userId: undefined, companyId: undefined, connectionId: null}
[TutorialManager] Initializing for tab: risk-score-configuration
[TutorialManager] Normalized tab name: risk-score (original: risk-score-configuration)
[TabTutorials] Initializing for tab: risk-score-configuration
[TabTutorials] Current state for risk-score-configuration: 
Object {tutorialEnabled: true, isLoading: false, error: null, currentStep: 0, totalSteps: 5, …}
[TutorialManager] Render state: 
Object {tutorialEnabled: true, currentStep: 0, totalSteps: 5, isCompleted: false, isLoading: true, …}
[TutorialManager] Direct DB check - Entry for risk-score-configuration: 
Object {exists: true, tabName: "risk-score", completed: false, currentStep: 0}
[TutorialManager] Should force tutorial: true
[TutorialManager] Rendering tutorial step 1 of 5
[WebSocket] Received message: 
Object {type: "connection_established", clientId: "client-1746819654687-gsg9o6r", timestamp: "2025-05-09T19:40:54.687Z", message: "Connection established"}
[WebSocket] Connection established with ID: client-1746819654687-gsg9o6r
[WebSocket] Received message: 
Object {type: "authenticated", timestamp: "2025-05-09T19:40:54.941Z", message: "Authentication successful"}
[WebSocket] Authentication successful
[TutorialManager] Initializing for tab: risk-score-configuration