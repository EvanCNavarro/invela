 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Task Reconciliation] Fetching KY3P responses for task 662
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:40:08.499Z'
}
[WebSocket] Broadcast "task_updated" sent to 4 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:40:08.499Z',
  clientCount: 4
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:40:08.529Z'
}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:40:08.530Z'
}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:40:08 PM [info] POST /api/tasks/662/update-progress 200 in 184ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:40:08.571Z'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:40:08.579Z'
}
[WebSocket] Broadcast "task_updated" sent to 4 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:40:08.579Z',
  clientCount: 4
}
[TimestampHandler] Saving 30 timestamps for task 661
1:40:08 PM [info] GET /api/tasks.json/662 200 in 77ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:40:08.613Z'
}
[TimestampHandler] Successfully saved timestamps for task 661
[TimestampAPI] Saved 30 timestamps for task 661
1:40:08 PM [info] POST /api/tasks/662/update-progress 200 in 182ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
1:40:08 PM [info] POST /api/kyb/timestamps/661 200 in 73ms :: {"message":"Timestamps saved successfully","count":30}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:40:08.752Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:40:08.782Z'
}
1:40:08 PM [info] GET /api/tasks.json/662 200 in 62ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
===============================================
[SERVER DEBUG] KYB PROGRESS SAVE REQUEST RECEIVED at 2025-04-29T13:40:08.819Z
===============================================
Task ID: 661
Progress: 97
Status: in_progress
Field count: 30
Sample form data values:
- dueDiligence: "Yes" (string)
- regulatoryActions: "" (string)
- lifetimeCustomerValue: "$1,250" (string)
- annualRecurringRevenue: "5,000,000" (string)
- investigationsIncidents: "No significant incidents in the past 3 years" (string)
Request details:
- Method: POST
- Content-Type: application/json
- Content-Length: 2493
===============================================
===============================================
[SERVER DEBUG] PROCESSING FORM DATA FIELDS AT 2025-04-29T13:40:08.879Z
[SERVER DEBUG] Task ID: 661, Field count: 30
===============================================
[SERVER DEBUG] COMPLETE FORM DATA DUMP:
[SERVER DEBUG] dueDiligence: "Yes" (string)
[SERVER DEBUG] regulatoryActions: "" (string)
[SERVER DEBUG] lifetimeCustomerValue: "$1,250" (string)
[SERVER DEBUG] annualRecurringRevenue: "5,000,000" (string)
[SERVER DEBUG] investigationsIncidents: "No significant incidents in the past 3 years" (string)
[SERVER DEBUG] financialStatements: "Yes" (string)
[SERVER DEBUG] operationalPolicies: "ISO 27001 certified, SOC 2 Type II compliant" (string)
[SERVER DEBUG] dataVolume: "Approximately 2 million records per month" (string)
[SERVER DEBUG] dataTypes: "Financial transaction data, Account balances, Customer KYC information" (string)
[SERVER DEBUG] sanctionsCheck: "Approximately 2 million records per month" (string)
[SERVER DEBUG] legalEntityName: "DevTest37" (string)
[SERVER DEBUG] registrationNumber: "12-3456789" (string)
[SERVER DEBUG] incorporationDate: "5/12/2010" (string)
[SERVER DEBUG] businessType: "Limited Liability Company (LLC)" (string)
[SERVER DEBUG] jurisdiction: "Delaware, United States" (string)
[SERVER DEBUG] registeredAddress: "123 Market Street, Wilmington, DE 19801" (string)
[SERVER DEBUG] companyPhone: "(302) 555-1234" (string)
[SERVER DEBUG] priorNames: "None" (string)
[SERVER DEBUG] licenses: "Money Transmitter License #MT-12345, Financial Data Provider License #FDP-98765" (string)
[SERVER DEBUG] goodStanding: "Yes" (string)
[SERVER DEBUG] corporateRegistration: "Delaware State Filing Number 1234567, registered as FinTech Innovations LLC on 05/12/2010" (string)
[SERVER DEBUG] externalAudit: "No" (string)
[SERVER DEBUG] controlEnvironment: "Yes" (string)
[SERVER DEBUG] authorizedSigners: "John Smith (CEO), Sarah Johnson (CFO), Michael Wong (COO)" (string)
[SERVER DEBUG] governmentOwnership: "No" (string)
[SERVER DEBUG] ultimateBeneficialOwners: "None" (string)
[SERVER DEBUG] directorsAndOfficers: "John Smith (Chairman), Jane Doe (Director), Mike Johnson (Director)" (string)
[SERVER DEBUG] contactEmail: "37@e.com" (string)
[SERVER DEBUG] marketCapitalization: "$75 million (privately held)" (string)
[SERVER DEBUG] monthlyRecurringRevenue: "12,500,000" (string)
[SERVER DEBUG] END OF FORM DATA DUMP
[SERVER DEBUG] No fields with value "asdf" found in incoming data
[SERVER DEBUG] Processing field: "dueDiligence" (ID: 29)
[SERVER DEBUG] Original value: Yes
[SERVER DEBUG] Normalized value: "Yes" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "dueDiligence" in database
[SERVER DEBUG] - Old value: "Yes" (string)
[SERVER DEBUG] - New value: "Yes" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: dueDiligence
[SERVER DEBUG] - field_id: 29
[SERVER DEBUG] - response_value: "Yes"
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:40:08.966Z'
}
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "dueDiligence":
[SERVER DEBUG] - Expected: "Yes"
[SERVER DEBUG] - Actual: "Yes"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "dueDiligence" (ID: 4419)
[SERVER DEBUG] --- Finished processing field "dueDiligence" ---

[SERVER DEBUG] Processing field: "regulatoryActions" (ID: 30)
[SERVER DEBUG] Original value: (empty string)
[SERVER DEBUG] Normalized value: "" (string)
[SERVER DEBUG] Field status: EMPTY
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:40:08.996Z'
}
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "regulatoryActions" in database
[SERVER DEBUG] - Old value: "" (string)
[SERVER DEBUG] - New value: "" (string)
[SERVER DEBUG] - Old status: EMPTY, New status: EMPTY
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: regulatoryActions
[SERVER DEBUG] - field_id: 30
[SERVER DEBUG] - response_value: ""
1:40:09 PM [info] GET /api/tasks.json/662 304 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "regulatoryActions":
[SERVER DEBUG] - Expected: ""
[SERVER DEBUG] - Actual: ""
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "regulatoryActions" (ID: 4420)
[SERVER DEBUG] --- Finished processing field "regulatoryActions" ---

[SERVER DEBUG] Processing field: "lifetimeCustomerValue" (ID: 20)
[SERVER DEBUG] Original value: $1,250
[SERVER DEBUG] Normalized value: "$1,250" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "lifetimeCustomerValue" in database
[SERVER DEBUG] - Old value: "$1,250" (string)
[SERVER DEBUG] - New value: "$1,250" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: lifetimeCustomerValue
[SERVER DEBUG] - field_id: 20
[SERVER DEBUG] - response_value: "$1,250"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "lifetimeCustomerValue":
[SERVER DEBUG] - Expected: "$1,250"
[SERVER DEBUG] - Actual: "$1,250"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "lifetimeCustomerValue" (ID: 4421)
[SERVER DEBUG] --- Finished processing field "lifetimeCustomerValue" ---

[SERVER DEBUG] Processing field: "annualRecurringRevenue" (ID: 21)
[SERVER DEBUG] Original value: 5,000,000
[SERVER DEBUG] Normalized value: "5,000,000" (string)
[SERVER DEBUG] Field status: COMPLETE
WebSocket client disconnected with code 1001 and reason: 
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "annualRecurringRevenue" in database
[SERVER DEBUG] - Old value: "5,000,000" (string)
[SERVER DEBUG] - New value: "5,000,000" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: annualRecurringRevenue
[SERVER DEBUG] - field_id: 21
[SERVER DEBUG] - response_value: "5,000,000"
WebSocket client disconnected with code 1001 and reason: 
WebSocket client disconnected with code 1001 and reason: 
WebSocket client disconnected with code 1001 and reason: 
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "annualRecurringRevenue":
[SERVER DEBUG] - Expected: "5,000,000"
[SERVER DEBUG] - Actual: "5,000,000"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "annualRecurringRevenue" (ID: 4422)
[SERVER DEBUG] --- Finished processing field "annualRecurringRevenue" ---

[SERVER DEBUG] Processing field: "investigationsIncidents" (ID: 23)
[SERVER DEBUG] Original value: No significant incidents in the past 3 years
[SERVER DEBUG] Normalized value: "No significant incidents in the past 3 years" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "investigationsIncidents" in database
[SERVER DEBUG] - Old value: "No significant incidents in the past 3 years" (string)
[SERVER DEBUG] - New value: "No significant incidents in the past 3 years" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: investigationsIncidents
[SERVER DEBUG] - field_id: 23
[SERVER DEBUG] - response_value: "No significant incidents in the past 3 years"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "investigationsIncidents":
[SERVER DEBUG] - Expected: "No significant incidents in the past 3 years"
[SERVER DEBUG] - Actual: "No significant incidents in the past 3 years"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "investigationsIncidents" (ID: 4423)
[SERVER DEBUG] --- Finished processing field "investigationsIncidents" ---

[SERVER DEBUG] Processing field: "financialStatements" (ID: 24)
[SERVER DEBUG] Original value: Yes
[SERVER DEBUG] Normalized value: "Yes" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "financialStatements" in database
[SERVER DEBUG] - Old value: "Yes" (string)
[SERVER DEBUG] - New value: "Yes" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: financialStatements
[SERVER DEBUG] - field_id: 24
[SERVER DEBUG] - response_value: "Yes"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "financialStatements":
[SERVER DEBUG] - Expected: "Yes"
[SERVER DEBUG] - Actual: "Yes"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "financialStatements" (ID: 4424)
[SERVER DEBUG] --- Finished processing field "financialStatements" ---

[SERVER DEBUG] Processing field: "operationalPolicies" (ID: 25)
[SERVER DEBUG] Original value: ISO 27001 certified, SOC 2 Type II compliant
[SERVER DEBUG] Normalized value: "ISO 27001 certified, SOC 2 Type II compliant" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "operationalPolicies" in database
[SERVER DEBUG] - Old value: "ISO 27001 certified, SOC 2 Type II compliant" (string)
[SERVER DEBUG] - New value: "ISO 27001 certified, SOC 2 Type II compliant" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: operationalPolicies
[SERVER DEBUG] - field_id: 25
[SERVER DEBUG] - response_value: "ISO 27001 certified, SOC 2 Type II compliant"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "operationalPolicies":
[SERVER DEBUG] - Expected: "ISO 27001 certified, SOC 2 Type II compliant"
[SERVER DEBUG] - Actual: "ISO 27001 certified, SOC 2 Type II compliant"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "operationalPolicies" (ID: 4425)
[SERVER DEBUG] --- Finished processing field "operationalPolicies" ---

[SERVER DEBUG] Processing field: "dataVolume" (ID: 26)
[SERVER DEBUG] Original value: Approximately 2 million records per month
[SERVER DEBUG] Normalized value: "Approximately 2 million records per month" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "dataVolume" in database
[SERVER DEBUG] - Old value: "Approximately 2 million records per month" (string)
[SERVER DEBUG] - New value: "Approximately 2 million records per month" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: dataVolume
[SERVER DEBUG] - field_id: 26
[SERVER DEBUG] - response_value: "Approximately 2 million records per month"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "dataVolume":
[SERVER DEBUG] - Expected: "Approximately 2 million records per month"
[SERVER DEBUG] - Actual: "Approximately 2 million records per month"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "dataVolume" (ID: 4426)
[SERVER DEBUG] --- Finished processing field "dataVolume" ---

[SERVER DEBUG] Processing field: "dataTypes" (ID: 27)
[SERVER DEBUG] Original value: Financial transaction data, Account balances, Customer KYC information
[SERVER DEBUG] Normalized value: "Financial transaction data, Account balances, Customer KYC information" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "dataTypes" in database
[SERVER DEBUG] - Old value: "Financial transaction data, Account balances, Customer KYC information" (string)
[SERVER DEBUG] - New value: "Financial transaction data, Account balances, Customer KYC information" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: dataTypes
[SERVER DEBUG] - field_id: 27
[SERVER DEBUG] - response_value: "Financial transaction data, Account balances, Customer KYC information"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "dataTypes":
[SERVER DEBUG] - Expected: "Financial transaction data, Account balances, Customer KYC information"
[SERVER DEBUG] - Actual: "Financial transaction data, Account balances, Customer KYC information"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "dataTypes" (ID: 4427)
[SERVER DEBUG] --- Finished processing field "dataTypes" ---

[SERVER DEBUG] Processing field: "sanctionsCheck" (ID: 28)
[SERVER DEBUG] Original value: Approximately 2 million records per month
[SERVER DEBUG] Normalized value: "Approximately 2 million records per month" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "sanctionsCheck" in database
[SERVER DEBUG] - Old value: "Approximately 2 million records per month" (string)
[SERVER DEBUG] - New value: "Approximately 2 million records per month" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: sanctionsCheck
[SERVER DEBUG] - field_id: 28
[SERVER DEBUG] - response_value: "Approximately 2 million records per month"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "sanctionsCheck":
[SERVER DEBUG] - Expected: "Approximately 2 million records per month"
[SERVER DEBUG] - Actual: "Approximately 2 million records per month"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "sanctionsCheck" (ID: 4428)
[SERVER DEBUG] --- Finished processing field "sanctionsCheck" ---

[SERVER DEBUG] Processing field: "legalEntityName" (ID: 1)
[SERVER DEBUG] Original value: DevTest37
[SERVER DEBUG] Normalized value: "DevTest37" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "legalEntityName" in database
[SERVER DEBUG] - Old value: "DevTest37" (string)
[SERVER DEBUG] - New value: "DevTest37" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: legalEntityName
[SERVER DEBUG] - field_id: 1
[SERVER DEBUG] - response_value: "DevTest37"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "legalEntityName":
[SERVER DEBUG] - Expected: "DevTest37"
[SERVER DEBUG] - Actual: "DevTest37"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "legalEntityName" (ID: 4429)
[SERVER DEBUG] Broadcasting legalEntityName update via WebSocket: "DevTest37"
[WebSocket] Broadcast "field_update" sent to 0 clients {
  type: 'field_update',
  dataKeys: [
    '0',       '1',
    '2',       '3',
    '4',       '5',
    '6',       '7',
    '8',       'taskId',
    'fieldId', 'timestamp'
  ],
  timestamp: '2025-04-29T13:40:09.875Z',
  clientCount: 0
}
[SERVER DEBUG] --- Finished processing field "legalEntityName" ---

[SERVER DEBUG] Processing field: "registrationNumber" (ID: 2)
[SERVER DEBUG] Original value: 12-3456789
[SERVER DEBUG] Normalized value: "12-3456789" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "registrationNumber" in database
[SERVER DEBUG] - Old value: "12-3456789" (string)
[SERVER DEBUG] - New value: "12-3456789" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: registrationNumber
[SERVER DEBUG] - field_id: 2
[SERVER DEBUG] - response_value: "12-3456789"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "registrationNumber":
[SERVER DEBUG] - Expected: "12-3456789"
[SERVER DEBUG] - Actual: "12-3456789"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "registrationNumber" (ID: 4430)
[SERVER DEBUG] --- Finished processing field "registrationNumber" ---

[SERVER DEBUG] Processing field: "incorporationDate" (ID: 3)
[SERVER DEBUG] Original value: 5/12/2010
[SERVER DEBUG] Normalized value: "5/12/2010" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "incorporationDate" in database
[SERVER DEBUG] - Old value: "5/12/2010" (string)
[SERVER DEBUG] - New value: "5/12/2010" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: incorporationDate
[SERVER DEBUG] - field_id: 3
[SERVER DEBUG] - response_value: "5/12/2010"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "incorporationDate":
[SERVER DEBUG] - Expected: "5/12/2010"
[SERVER DEBUG] - Actual: "5/12/2010"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "incorporationDate" (ID: 4431)
[SERVER DEBUG] --- Finished processing field "incorporationDate" ---

[SERVER DEBUG] Processing field: "businessType" (ID: 4)
[SERVER DEBUG] Original value: Limited Liability Company (LLC)
[SERVER DEBUG] Normalized value: "Limited Liability Company (LLC)" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "businessType" in database
[SERVER DEBUG] - Old value: "Limited Liability Company (LLC)" (string)
[SERVER DEBUG] - New value: "Limited Liability Company (LLC)" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: businessType
[SERVER DEBUG] - field_id: 4
[SERVER DEBUG] - response_value: "Limited Liability Company (LLC)"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "businessType":
[SERVER DEBUG] - Expected: "Limited Liability Company (LLC)"
[SERVER DEBUG] - Actual: "Limited Liability Company (LLC)"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "businessType" (ID: 4432)
[SERVER DEBUG] --- Finished processing field "businessType" ---

[SERVER DEBUG] Processing field: "jurisdiction" (ID: 5)
[SERVER DEBUG] Original value: Delaware, United States
[SERVER DEBUG] Normalized value: "Delaware, United States" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "jurisdiction" in database
[SERVER DEBUG] - Old value: "Delaware, United States" (string)
[SERVER DEBUG] - New value: "Delaware, United States" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: jurisdiction
[SERVER DEBUG] - field_id: 5
[SERVER DEBUG] - response_value: "Delaware, United States"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "jurisdiction":
[SERVER DEBUG] - Expected: "Delaware, United States"
[SERVER DEBUG] - Actual: "Delaware, United States"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "jurisdiction" (ID: 4433)
[SERVER DEBUG] --- Finished processing field "jurisdiction" ---

[SERVER DEBUG] Processing field: "registeredAddress" (ID: 6)
[SERVER DEBUG] Original value: 123 Market Street, Wilmington, DE 19801
[SERVER DEBUG] Normalized value: "123 Market Street, Wilmington, DE 19801" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "registeredAddress" in database
[SERVER DEBUG] - Old value: "123 Market Street, Wilmington, DE 19801" (string)
[SERVER DEBUG] - New value: "123 Market Street, Wilmington, DE 19801" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: registeredAddress
[SERVER DEBUG] - field_id: 6
[SERVER DEBUG] - response_value: "123 Market Street, Wilmington, DE 19801"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "registeredAddress":
[SERVER DEBUG] - Expected: "123 Market Street, Wilmington, DE 19801"
[SERVER DEBUG] - Actual: "123 Market Street, Wilmington, DE 19801"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "registeredAddress" (ID: 4434)
[SERVER DEBUG] --- Finished processing field "registeredAddress" ---

[SERVER DEBUG] Processing field: "companyPhone" (ID: 7)
[SERVER DEBUG] Original value: (302) 555-1234
[SERVER DEBUG] Normalized value: "(302) 555-1234" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "companyPhone" in database
[SERVER DEBUG] - Old value: "(302) 555-1234" (string)
[SERVER DEBUG] - New value: "(302) 555-1234" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: companyPhone
[SERVER DEBUG] - field_id: 7
[SERVER DEBUG] - response_value: "(302) 555-1234"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "companyPhone":
[SERVER DEBUG] - Expected: "(302) 555-1234"
[SERVER DEBUG] - Actual: "(302) 555-1234"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "companyPhone" (ID: 4435)
[SERVER DEBUG] --- Finished processing field "companyPhone" ---

[SERVER DEBUG] Processing field: "priorNames" (ID: 8)
[SERVER DEBUG] Original value: None
[SERVER DEBUG] Normalized value: "None" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "priorNames" in database
[SERVER DEBUG] - Old value: "None" (string)
[SERVER DEBUG] - New value: "None" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: priorNames
[SERVER DEBUG] - field_id: 8
[SERVER DEBUG] - response_value: "None"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "priorNames":
[SERVER DEBUG] - Expected: "None"
[SERVER DEBUG] - Actual: "None"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "priorNames" (ID: 4436)
[SERVER DEBUG] --- Finished processing field "priorNames" ---

[SERVER DEBUG] Processing field: "licenses" (ID: 9)
[SERVER DEBUG] Original value: Money Transmitter License #MT-12345, Financial Data Provider License #FDP-98765
[SERVER DEBUG] Normalized value: "Money Transmitter License #MT-12345, Financial Data Provider License #FDP-98765" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "licenses" in database
[SERVER DEBUG] - Old value: "Money Transmitter License #MT-12345, Financial Data Provider License #FDP-98765" (string)
[SERVER DEBUG] - New value: "Money Transmitter License #MT-12345, Financial Data Provider License #FDP-98765" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: licenses
[SERVER DEBUG] - field_id: 9
[SERVER DEBUG] - response_value: "Money Transmitter License #MT-12345, Financial Data Provider License #FDP-98765"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "licenses":
[SERVER DEBUG] - Expected: "Money Transmitter License #MT-12345, Financial Data Provider License #FDP-98765"
[SERVER DEBUG] - Actual: "Money Transmitter License #MT-12345, Financial Data Provider License #FDP-98765"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "licenses" (ID: 4437)
[SERVER DEBUG] --- Finished processing field "licenses" ---

[SERVER DEBUG] Processing field: "goodStanding" (ID: 10)
[SERVER DEBUG] Original value: Yes
[SERVER DEBUG] Normalized value: "Yes" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "goodStanding" in database
[SERVER DEBUG] - Old value: "Yes" (string)
[SERVER DEBUG] - New value: "Yes" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: goodStanding
[SERVER DEBUG] - field_id: 10
[SERVER DEBUG] - response_value: "Yes"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "goodStanding":
[SERVER DEBUG] - Expected: "Yes"
[SERVER DEBUG] - Actual: "Yes"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "goodStanding" (ID: 4438)
[SERVER DEBUG] --- Finished processing field "goodStanding" ---

[SERVER DEBUG] Processing field: "corporateRegistration" (ID: 11)
[SERVER DEBUG] Original value: Delaware State Filing Number 1234567, registered as FinTech Innovations LLC on 05/12/2010
[SERVER DEBUG] Normalized value: "Delaware State Filing Number 1234567, registered as FinTech Innovations LLC on 05/12/2010" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "corporateRegistration" in database
[SERVER DEBUG] - Old value: "Delaware State Filing Number 1234567, registered as FinTech Innovations LLC on 05/12/2010" (string)
[SERVER DEBUG] - New value: "Delaware State Filing Number 1234567, registered as FinTech Innovations LLC on 05/12/2010" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: corporateRegistration
[SERVER DEBUG] - field_id: 11
[SERVER DEBUG] - response_value: "Delaware State Filing Number 1234567, registered as FinTech Innovations LLC on 05/12/2010"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "corporateRegistration":
[SERVER DEBUG] - Expected: "Delaware State Filing Number 1234567, registered as FinTech Innovations LLC on 05/12/2010"
[SERVER DEBUG] - Actual: "Delaware State Filing Number 1234567, registered as FinTech Innovations LLC on 05/12/2010"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "corporateRegistration" (ID: 4439)
[SERVER DEBUG] --- Finished processing field "corporateRegistration" ---

[SERVER DEBUG] Processing field: "externalAudit" (ID: 12)
[SERVER DEBUG] Original value: No
[SERVER DEBUG] Normalized value: "No" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "externalAudit" in database
[SERVER DEBUG] - Old value: "No" (string)
[SERVER DEBUG] - New value: "No" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: externalAudit
[SERVER DEBUG] - field_id: 12
[SERVER DEBUG] - response_value: "No"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "externalAudit":
[SERVER DEBUG] - Expected: "No"
[SERVER DEBUG] - Actual: "No"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "externalAudit" (ID: 4440)
[SERVER DEBUG] --- Finished processing field "externalAudit" ---

[SERVER DEBUG] Processing field: "controlEnvironment" (ID: 13)
[SERVER DEBUG] Original value: Yes
[SERVER DEBUG] Normalized value: "Yes" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "controlEnvironment" in database
[SERVER DEBUG] - Old value: "Yes" (string)
[SERVER DEBUG] - New value: "Yes" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: controlEnvironment
[SERVER DEBUG] - field_id: 13
[SERVER DEBUG] - response_value: "Yes"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "controlEnvironment":
[SERVER DEBUG] - Expected: "Yes"
[SERVER DEBUG] - Actual: "Yes"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "controlEnvironment" (ID: 4441)
[SERVER DEBUG] --- Finished processing field "controlEnvironment" ---

[SERVER DEBUG] Processing field: "authorizedSigners" (ID: 14)
[SERVER DEBUG] Original value: John Smith (CEO), Sarah Johnson (CFO), Michael Wong (COO)
[SERVER DEBUG] Normalized value: "John Smith (CEO), Sarah Johnson (CFO), Michael Wong (COO)" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "authorizedSigners" in database
[SERVER DEBUG] - Old value: "John Smith (CEO), Sarah Johnson (CFO), Michael Wong (COO)" (string)
[SERVER DEBUG] - New value: "John Smith (CEO), Sarah Johnson (CFO), Michael Wong (COO)" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: authorizedSigners
[SERVER DEBUG] - field_id: 14
[SERVER DEBUG] - response_value: "John Smith (CEO), Sarah Johnson (CFO), Michael Wong (COO)"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "authorizedSigners":
[SERVER DEBUG] - Expected: "John Smith (CEO), Sarah Johnson (CFO), Michael Wong (COO)"
[SERVER DEBUG] - Actual: "John Smith (CEO), Sarah Johnson (CFO), Michael Wong (COO)"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "authorizedSigners" (ID: 4442)
[SERVER DEBUG] --- Finished processing field "authorizedSigners" ---

[SERVER DEBUG] Processing field: "governmentOwnership" (ID: 15)
[SERVER DEBUG] Original value: No
[SERVER DEBUG] Normalized value: "No" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "governmentOwnership" in database
[SERVER DEBUG] - Old value: "No" (string)
[SERVER DEBUG] - New value: "No" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: governmentOwnership
[SERVER DEBUG] - field_id: 15
[SERVER DEBUG] - response_value: "No"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "governmentOwnership":
[SERVER DEBUG] - Expected: "No"
[SERVER DEBUG] - Actual: "No"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "governmentOwnership" (ID: 4443)
[SERVER DEBUG] --- Finished processing field "governmentOwnership" ---

[SERVER DEBUG] Processing field: "ultimateBeneficialOwners" (ID: 16)
[SERVER DEBUG] Original value: None
[SERVER DEBUG] Normalized value: "None" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "ultimateBeneficialOwners" in database
[SERVER DEBUG] - Old value: "None" (string)
[SERVER DEBUG] - New value: "None" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: ultimateBeneficialOwners
[SERVER DEBUG] - field_id: 16
[SERVER DEBUG] - response_value: "None"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "ultimateBeneficialOwners":
[SERVER DEBUG] - Expected: "None"
[SERVER DEBUG] - Actual: "None"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "ultimateBeneficialOwners" (ID: 4444)
[SERVER DEBUG] --- Finished processing field "ultimateBeneficialOwners" ---

[SERVER DEBUG] Processing field: "directorsAndOfficers" (ID: 17)
[SERVER DEBUG] Original value: John Smith (Chairman), Jane Doe (Director), Mike Johnson (Director)
[SERVER DEBUG] Normalized value: "John Smith (Chairman), Jane Doe (Director), Mike Johnson (Director)" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "directorsAndOfficers" in database
[SERVER DEBUG] - Old value: "John Smith (Chairman), Jane Doe (Director), Mike Johnson (Director)" (string)
[SERVER DEBUG] - New value: "John Smith (Chairman), Jane Doe (Director), Mike Johnson (Director)" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: directorsAndOfficers
[SERVER DEBUG] - field_id: 17
[SERVER DEBUG] - response_value: "John Smith (Chairman), Jane Doe (Director), Mike Johnson (Director)"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "directorsAndOfficers":
[SERVER DEBUG] - Expected: "John Smith (Chairman), Jane Doe (Director), Mike Johnson (Director)"
[SERVER DEBUG] - Actual: "John Smith (Chairman), Jane Doe (Director), Mike Johnson (Director)"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "directorsAndOfficers" (ID: 4445)
[SERVER DEBUG] --- Finished processing field "directorsAndOfficers" ---

[SERVER DEBUG] Processing field: "contactEmail" (ID: 18)
[SERVER DEBUG] Original value: 37@e.com
[SERVER DEBUG] Normalized value: "37@e.com" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "contactEmail" in database
[SERVER DEBUG] - Old value: "37@e.com" (string)
[SERVER DEBUG] - New value: "37@e.com" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: contactEmail
[SERVER DEBUG] - field_id: 18
[SERVER DEBUG] - response_value: "37@e.com"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "contactEmail":
[SERVER DEBUG] - Expected: "37@e.com"
[SERVER DEBUG] - Actual: "37@e.com"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "contactEmail" (ID: 4446)
[SERVER DEBUG] --- Finished processing field "contactEmail" ---

[SERVER DEBUG] Processing field: "marketCapitalization" (ID: 19)
[SERVER DEBUG] Original value: $75 million (privately held)
[SERVER DEBUG] Normalized value: "$75 million (privately held)" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "marketCapitalization" in database
[SERVER DEBUG] - Old value: "$75 million (privately held)" (string)
[SERVER DEBUG] - New value: "$75 million (privately held)" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: marketCapitalization
[SERVER DEBUG] - field_id: 19
[SERVER DEBUG] - response_value: "$75 million (privately held)"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "marketCapitalization":
[SERVER DEBUG] - Expected: "$75 million (privately held)"
[SERVER DEBUG] - Actual: "$75 million (privately held)"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "marketCapitalization" (ID: 4447)
[SERVER DEBUG] --- Finished processing field "marketCapitalization" ---

[SERVER DEBUG] Processing field: "monthlyRecurringRevenue" (ID: 22)
[SERVER DEBUG] Original value: 12,500,000
[SERVER DEBUG] Normalized value: "12,500,000" (string)
[SERVER DEBUG] Field status: COMPLETE
[SERVER DEBUG] Existing response found: YES
[SERVER DEBUG] UPDATING field "monthlyRecurringRevenue" in database
[SERVER DEBUG] - Old value: "12,500,000" (string)
[SERVER DEBUG] - New value: "12,500,000" (string)
[SERVER DEBUG] - Old status: COMPLETE, New status: COMPLETE
[SERVER DEBUG] ABOUT TO UPDATE - DOUBLE CHECK VALUES:
[SERVER DEBUG] - field_key: monthlyRecurringRevenue
[SERVER DEBUG] - field_id: 22
[SERVER DEBUG] - response_value: "12,500,000"
[SERVER DEBUG] ✅ UPDATE VERIFICATION for field "monthlyRecurringRevenue":
[SERVER DEBUG] - Expected: "12,500,000"
[SERVER DEBUG] - Actual: "12,500,000"
[SERVER DEBUG] - Match: YES
[SERVER DEBUG] ✅ UPDATE SUCCESSFUL for field "monthlyRecurringRevenue" (ID: 4448)
[SERVER DEBUG] --- Finished processing field "monthlyRecurringRevenue" ---

[KYB API Debug] Using client-provided status: in_progress
[WebSocket] Broadcasting task update for task 661: progress=97, status=in_progress
[WebSocket] Broadcast "task_updated" sent to 0 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:40:11.872Z',
  clientCount: 0
}
===============================================
[SERVER DEBUG] PREPARING RESPONSE at 2025-04-29T13:40:11.905Z
[SERVER DEBUG] Found 30 fields in database after update
===============================================
[SERVER DEBUG] Checking field corporateRegistration in updated data: "Delaware State Filing Number 1234567, registered as FinTech Innovations LLC on 05/12/2010"
[SERVER DEBUG] Checking field goodStanding in updated data: "Yes"
[SERVER DEBUG] Checking field regulatoryActions in updated data: ""
[SERVER DEBUG] Checking field investigationsIncidents in updated data: "No significant incidents in the past 3 years"
[SERVER DEBUG] No fields with value "asdf" found in response data
[SERVER DEBUG] Sending response with 30 fields, status: in_progress, progress: 97%
[SERVER DEBUG] Updating task.savedFormData to ensure persistence across navigation
[SERVER DEBUG] ✅ Successfully updated task.savedFormData with latest form data
===============================================
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Using cached user data: 290
[Auth] Returning user session data
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:40:17.971Z'
}
[Auth] Using cached user data: 290
[Current Company] Fetching company for user: { userId: 290, companyId: 248 }
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:40:18.001Z'
}
1:40:18 PM [info] GET /api/tasks 304 in 55ms :: [{"id":660,"title":"New User Invitation: 37@e.com","description":"Complete us...
[Current Company] Found company: {
  id: 248,
  name: 'DevTest37',
  onboardingCompleted: false,
  riskScore: null,
  chosenScore: null,
  isDemo: true
}
1:40:18 PM [info] GET /api/tasks.json/662 200 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:40:18 PM [info] GET /api/companies/current 304 in 68ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
New WebSocket client connected
[Auth] Using cached user data: 290
[Tasks] Using cached task data for user: 290
1:40:18 PM [info] GET /api/tasks 304 in 32ms :: [{"id":660,"title":"New User Invitation: 37@e.com","description":"Complete us...
New WebSocket client connected
New WebSocket client connected
1:40:21 PM [info] GET /api/companies/current 304 in 31ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
1:40:32 PM [info] GET /api/companies/current 304 in 36ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
1:40:36 PM [info] GET /api/companies/current 304 in 30ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
1:40:38 PM [info] GET /api/companies/current 304 in 30ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[WebSocket] Received ping
1:40:48 PM [info] GET /api/companies/current 304 in 31ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Auth] Using cached user data: 290
1:40:58 PM [info] GET /api/companies/current 304 in 31ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Auth] Returning user session data
[Task Templates API] Fetching template for task type: ky3p, user: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:00.347Z' }
[Task Templates API] Found template: 48 (S&P KY3P Security Assessment) for task type: ky3p
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Templates API] Retrieved 10 configuration items for template ID: 48
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:00 PM [info] GET /api/task-templates/by-type/ky3p 304 in 103ms :: {"id":48,"name":"S&P KY3P Security Assessment","description":"S&P KY3P Securi...
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:00.477Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:00.477Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:00.510Z'
}
1:41:00 PM [info] POST /api/tasks/662/update-progress 200 in 200ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[2025-04-29T13:41:00.602Z] [INFO] [KY3PRoutes] [KY3P API] Fetching KY3P fields. User authenticated: true
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:00.603Z' }
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:00.634Z'
}
[Task Reconciliation] Fetching KY3P responses for task 662
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:00.663Z'
}
[2025-04-29T13:41:00.689Z] [INFO] [KY3PRoutes] [KY3P API] Successfully retrieved 120 KY3P fields
[2025-04-29T13:41:00.689Z] [INFO] [KY3PRoutes] [KY3P API] Fields grouped by step: ["Step 0: 120 fields"]
1:41:00 PM [info] GET /api/tasks.json/662 200 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:00 PM [info] GET /api/ky3p-fields 304 in 120ms :: [{"id":1,"order":1,"field_key":"externalSystems","display_name":"External Sys...
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:00.733Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:00.734Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:00.769Z'
}
1:41:00 PM [info] POST /api/tasks/662/update-progress 200 in 200ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:00.896Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:01.004Z'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:01.026Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:01.026Z',
  clientCount: 3
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:01.036Z'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:01.044Z' }
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:01.060Z'
}
1:41:01 PM [info] GET /api/tasks.json/662 200 in 67ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Task Reconciliation] Fetching KY3P responses for task 662
1:41:01 PM [info] POST /api/tasks/662/update-progress 200 in 199ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:01.164Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:01.164Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:01.197Z'
}
1:41:01 PM [info] POST /api/tasks/662/update-progress 200 in 187ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:01.311Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:01.346Z'
}
1:41:01 PM [info] GET /api/tasks.json/662 200 in 66ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[2025-04-29T13:41:04.545Z] [INFO] [KY3PRoutes] KY3P Demo auto-fill requested for task {"taskId":"662","userId":290}
[2025-04-29T13:41:04.687Z] [INFO] [KY3PRoutes] Fetched fields for KY3P demo auto-fill {"fieldCount":120,"taskId":"662"}
[KY3P Demo Auto-Fill] First 5 fields from database:
[KY3P Demo Auto-Fill] Raw field objects: [
  {
    id: 1,
    field_key: 'externalSystems',
    display_name: 'External Systems',
    field_type: 'TEXTAREA',
    question: 'Describe how your organization maintains and updates its inventory of external information systems.',
    group: 'Development',
    required: false,
    order: 1,
    step_index: 0,
    validation_rules: 'NULL',
    help_text: 'List external systems maintained by your organization clearly.',
    demo_autofill: 'Our external information systems inventory is updated monthly and validated through automated discovery tools and manual audits.'
  },
  {
    id: 2,
    field_key: 'breachNotification',
    display_name: 'Breach Notification',
    field_type: 'TEXTAREA',
    question: 'Explain the process your organization follows to notify data controllers promptly upon becoming aware of a privacy data breach.',
    group: 'Development',
    required: false,
    order: 2,
    step_index: 0,
    validation_rules: 'NULL',
    help_text: 'Summarize your protocol for notifying controllers after privacy breaches.',
    demo_autofill: "Controllers are promptly notified of privacy data breaches within 24 hours of our organization's awareness, including detailed incident information and remediation steps."
  },
  {
    id: 3,
    field_key: 'privacyIncidentProcedure',
    display_name: 'Privacy Incident Procedure',
    field_type: 'TEXTAREA',
    question: "Detail your organization's formal procedures for reporting and responding to privacy-related incidents.",
    group: 'Development',
    required: false,
    order: 3,
    step_index: 0,
    validation_rules: 'NULL',
    help_text: 'Explain your process for handling security incidents.',
    demo_autofill: 'Formal procedures are in place for reporting, managing, and responding to privacy-related incidents, ensuring prompt and appropriate actions are taken.'
  },
  {
    id: 4,
    field_key: 'publicPrivacyNotice',
    display_name: 'Public Privacy Notice',
    field_type: 'TEXTAREA',
    question: 'Describe how your organization provides publicly accessible privacy notices or policies at all points of personal data collection and processing.',
    group: 'Development',
    required: false,
    order: 4,
    step_index: 0,
    validation_rules: 'NULL',
    help_text: 'Describe how clearly you communicate privacy practices to users.',
    demo_autofill: 'Privacy notices and policies are publicly accessible at every point where personal data is collected, stored, processed, or transmitted, clearly detailing usage and rights.'
  },
  {
    id: 5,
    field_key: 'privacyLawCompliance',
    display_name: 'Privacy Law Compliance',
    field_type: 'TEXTAREA',
    question: "Explain how your organization's privacy policies and standards are designed to protect customer privacy and comply with global and local privacy regulations (e.g., GDPR, CCPA, CPPA, GLBA).",
    group: 'Development',
    required: false,
    order: 5,
    step_index: 0,
    validation_rules: 'NULL',
    help_text: 'Detail your processes to ensure compliance with privacy laws.',
    demo_autofill: 'Privacy policies and standards are fully compliant with global and regional privacy laws, including GDPR, CCPA, CPPA, and GLBA, supported by regular compliance audits.'
  }
]
[2025-04-29T13:41:04.689Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for externalSystems: Our external information systems inventory is updated monthly and validated through automated discovery tools and manual audits.
[2025-04-29T13:41:04.689Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for breachNotification: Controllers are promptly notified of privacy data breaches within 24 hours of our organization's awareness, including detailed incident information and remediation steps.
[2025-04-29T13:41:04.689Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for privacyIncidentProcedure: Formal procedures are in place for reporting, managing, and responding to privacy-related incidents, ensuring prompt and appropriate actions are taken.
[2025-04-29T13:41:04.689Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for publicPrivacyNotice: Privacy notices and policies are publicly accessible at every point where personal data is collected, stored, processed, or transmitted, clearly detailing usage and rights.
[2025-04-29T13:41:04.689Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for privacyLawCompliance: Privacy policies and standards are fully compliant with global and regional privacy laws, including GDPR, CCPA, CPPA, and GLBA, supported by regular compliance audits.
[2025-04-29T13:41:04.689Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataRetentionLimits: Personal data is retained only as long as required to fulfill the explicit purposes for which it was collected, after which it is securely destroyed.
[2025-04-29T13:41:04.689Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for personalDataMinimization: Collection and processing of personal data are strictly limited to essential business purposes, following clearly documented data minimization principles.
[2025-04-29T13:41:04.689Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataMinimizationTechniques: Data minimization is enforced through technical measures such as pseudonymization, anonymization, and strong encryption practices in line with privacy regulations.
[2025-04-29T13:41:04.689Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dpoAppointment: A Data Protection Officer (DPO) has been formally appointed, responsible for overseeing compliance and ensuring informed consent mechanisms, including clear consent withdrawal procedures.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for developmentLifecycle: Our System Development Lifecycle (SDLC) includes defined stages: requirements gathering, secure development, rigorous testing, deployment, and post-release maintenance.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for secureCodeReviews: Secure source code reviews are performed regularly to ensure developers follow established secure coding standards and practices prior to deployment.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for codeScanning: Static and dynamic source code scanning tools are used during development cycles and prior to deployment to identify and remediate security vulnerabilities.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for developerAccessControls: Developer access to production environments is strictly controlled and monitored, restricted by role-based permissions and audited regularly.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for backupRecoveryDocument: Our backup and recovery documentation clearly defines requirements and procedures for system backups, data restoration, and data integrity checks.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cyberLiabilityInsurance: We hold Cyber Liability, Network Security, and Privacy Liability Insurance with coverage adequate to mitigate potential cyber incident impacts.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataLocationTracking: Cloud data locations are tracked and documented through automated asset management tools and regular manual validations.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for alternateFacilities: We regularly test connectivity, recovery time objectives, and system capacity at alternate recovery sites through annual resilience exercises.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for logicalAccess: Logical access is granted only after managerial approval, with regular access reviews conducted quarterly to confirm continued business justification.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for detectionSystems: Notifications from detection systems trigger immediate investigation protocols managed by our 24/7 security operations center (SOC).
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for disasterRecoveryTesting: Comprehensive disaster recovery tests covering all critical technology components are conducted annually, with results documented and improvements identified.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for appVulnerabilityScanning: Application vulnerability scans are conducted quarterly and immediately after significant application changes, identifying and mitigating vulnerabilities promptly.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for testingIssueTracking: Issues identified during continuity tests are documented, tracked through resolution, and addressed with specific action plans and targeted completion dates.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cloudDataRetrieval: Cloud service customers can securely retrieve their data using encrypted application programming interfaces (APIs), supporting interoperability and easy portability.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for recoverySystemsUpdate: Recovery documentation and systems at alternate sites are promptly updated following production system and business process changes.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for webApplicationSecurity: Application-layer security measures include Web Application Firewalls (WAFs) and proxy services, providing protection against common web-based threats.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for technicalResilience: Technical resilience mechanisms employed include load balancing, failover clustering, and hot-swappable hardware to ensure continuous operations under adverse conditions.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for externalDependencyResilience: Critical external dependencies and business partners are integrated into our resilience strategy, participating in joint planning and periodic exercises.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for backupProcessTesting: Backup and replication processes are thoroughly tested quarterly, including full-system recoveries, to validate their effectiveness and reliability.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for penetrationTesting: Application penetration tests are performed annually and after significant updates, utilizing independent third-party testing to validate application security.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentContainment: We maintain documented containment strategies tailored to various incident scenarios, enabling rapid isolation and mitigation of security threats.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for privacyPolicyDocument: Our written privacy policy outlines data collection practices, usage, sharing, retention periods, and individuals' rights regarding their personal data.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for policyAcknowledgement: Employees must formally acknowledge the acceptable use policy electronically before receiving access to company systems and data.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for changeManagement: Our change management program includes documented policies, formal review processes, and clearly defined change authorization responsibilities.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for remoteMfa: Multifactor authentication (MFA) is mandated for all remote network access, using secure methods such as mobile authenticator apps or hardware tokens.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for securityPolicy: Our organization maintains documented cybersecurity policies covering data protection, access control, and incident response, reviewed and updated annually.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for changeAuditTrail: A detailed audit trail of all system changes is maintained, including timestamps, authorizations, justifications, and rollback procedures.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for regulatoryCompliance: Cybersecurity strategies are explicitly aligned with applicable legal and regulatory requirements, including regular compliance audits and reporting.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataRetentionGovernance: Data retention governance is documented, outlining policies, schedules, responsibilities, and processes for secure data storage, retention, and timely disposal.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for acceptableUse: Our acceptable use governance document covers permitted technology use, restrictions, and user responsibilities, communicated clearly to all employees.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for centralizedAuthentication: Centralized account management uses Active Directory and Single Sign-On (SSO) solutions to manage credentials securely, encrypting them both at rest and in transit.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataClassificationGovernance: Data governance and classification policies define data sensitivity levels, handling requirements, and access control measures across all organizational assets.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for iamGovernance: Our identity and access management (IAM) governance document clearly defines user access provisioning, management, and de-provisioning procedures.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cloudSecurityRequirements: Cloud service infrastructure security requirements and virtualization practices are documented, reviewed annually, and aligned with industry best practices.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for threatManagementGovernance: Threat and vulnerability management governance is documented, outlining processes for identification, assessment, prioritization, and mitigation of security threats.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for amlGovernance: Our anti-money laundering (AML) governance is documented and enforced through clearly defined procedures, ongoing employee training, and regular compliance checks.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for antiFraudGovernance: Anti-fraud governance measures include detailed policies, controls, monitoring systems, employee training, and clear reporting procedures.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for loggingGovernance: Logging program governance documents the procedures and standards for capturing, reviewing, and retaining system logs, supporting incident investigations and compliance reporting.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for encryptionGovernance: Our encryption program governance specifies encryption standards, protocols, and procedures for managing cryptographic implementations across our environment.
[2025-04-29T13:41:04.690Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for transactionAuthentication: Transaction authentication processes employ advanced, secure methods such as multifactor authentication and transaction verification codes to prevent fraud and errors.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for equipmentRedundancy: Critical business equipment has redundant counterparts independently located at a separate, industry-standard minimum distance.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for passwordVisibility: Password fields during login processes are concealed, encrypted, and obscured to prevent accidental disclosure or viewing by unauthorized individuals.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for privilegedUserLogs: Privileged user activities are logged, regularly reviewed, and monitored closely for anomalies or unauthorized actions.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for physicalMfa: Physical access at data-handling locations requires multifactor authentication with unique identification badges and biometric verification.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for executiveCyberTraining: Executive cybersecurity training is provided annually, highlighting current threats, strategic risks, and governance responsibilities for senior management.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for complianceTraining: Compliance-related training sessions are provided quarterly, covering critical regulations, ethical standards, and procedural compliance requirements.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for annualSecurityTraining: All employees complete cybersecurity awareness training annually, covering phishing, password security, and information handling best practices.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for developerTraining: Developers, including subcontractors, complete mandatory secure development training annually, emphasizing secure coding practices and vulnerability prevention.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for accountCompromise: Suspected account compromises trigger immediate password resets, account reviews, and security incident investigations to mitigate further risk.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for passwordPolicies: Password policies conform to industry best practices, requiring complexity, periodic changes, and preventing reuse across all systems handling client data.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for defaultPasswords: Default passwords are immediately changed, and unnecessary default accounts are disabled before any system deployment or configuration in production environments.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for deviceAccessMonitoring: We utilize advanced network monitoring tools and endpoint protection solutions to detect, monitor, and control access to devices, connections, and data transfers.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for crisisTeamAvailability: The crisis response team is staffed on a 24/7/365 basis, supported by trained alternates and robust escalation protocols.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for vendorContracts: Contractual agreements with critical subcontractors explicitly define and enforce compliance with our established resilience standards and expectations.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for staffResilience: Our resilience program includes remote work options, employee assistance services, and clear communication channels to support staff during disruptions.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for pandemicResponse: Our resilience measures explicitly include pandemic management plans, protocols for infectious disease outbreaks, natural event responses, and workforce absenteeism contingencies.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for vendorBcmReview: Subcontractors' resilience programs are reviewed annually to verify alignment with our standards and recovery objectives through audits and contractual obligations.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for continuityTesting: Comprehensive business continuity tests are documented annually for all facilities and services processing client data, ensuring consistent operational readiness.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for resiliencePolicy: Our resilience policies cover comprehensive business continuity and disaster recovery measures, documented and enforced across all critical operational sites.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for bcpRolesResponsibilities: Our business continuity plan explicitly defines personnel roles, responsibilities, and skills required for effective response and recovery during disruptions.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for crisisManagementPlan: Our crisis management plan clearly outlines response actions, communication protocols, and coordination strategies across all client data-handling locations.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for bcpPolicyReview: The business continuity and recovery policy undergoes a comprehensive review and formal approval annually to ensure it reflects our current operational environment.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for bcpCommunicationPlan: The business continuity communication plan clearly specifies methods, channels, and responsibilities for communicating with internal and external stakeholders during events.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for continuityTraining: Employees undergo annual training covering their business continuity responsibilities, roles during disruptions, and familiarization with continuity plans.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for crisisTeamRoles: Crisis response team roles and responsibilities are clearly documented and reviewed semi-annually, ensuring clarity at all business process levels.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for assetRetrieval: Assets from terminated employees and subcontractors are collected and inventoried on or before their last day, ensuring accurate reconciliation.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cloudInteroperability: Our resiliency approach specifically addresses cloud service portability, interoperability, and exit strategies to mitigate vendor lock-in risks.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for immutableRecoveryData: Immutable instances of recovery data are maintained using secure, air-gapped storage solutions, protected from modification or unauthorized access.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for powerBackup: Business-critical equipment is supported by multiple power sources, including backup generators and redundant power grids, routinely maintained and tested quarterly.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for securityExceptions: We manage exceptions through a centralized registry, reviewed monthly to ensure timely mitigation.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for wirelessSegmentation: Non-production and guest wireless networks are segregated from production systems through logical network isolation and firewall rules.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for standardChangeControl: All system and operational changes undergo a standardized change control review process, documented and approved through our automated tracking system.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for emergingTechnologies: We integrate cybersecurity considerations at the beginning of the evaluation phase for emerging technologies, following our defined security framework.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for recoveryObjectives: Our RPO ensures data integrity by limiting potential data loss to less than one hour, fully aligning with our defined 4-hour RTO.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for criticalOperations: Our critical operational objectives include restoring service functionality within 4 hours and maintaining data integrity with minimal data loss.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for fraudActivityReporting: Suspected and confirmed fraud activities are promptly reported and communicated to affected clients using structured reporting processes and secure channels.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cybersecurityRoles: Roles and responsibilities within our cybersecurity team are clearly documented, updated annually, and communicated during onboarding and ongoing training.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for insuranceCoverage: Our organization maintains comprehensive insurance coverage, including liability, property damage, cybersecurity, and operational risk insurance.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for networkRedundancy: We employ diverse telecommunication carriers, redundant network pathways, and scalable circuits designed around risk assessments and operational requirements.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataLossPrevention: Our DLP measures include endpoint monitoring, real-time alerts, and automatic prevention to detect and prevent unauthorized access or data leakage.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataLossGovernance: Information and data loss prevention governance is documented, with clear policies, detection mechanisms, and periodic training for employees.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for activityLogging: User activities across all critical systems and applications are logged and monitored continuously to detect and respond to suspicious behavior.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentDocumentation: Cybersecurity incidents are systematically documented and reported, including incident timelines, actions taken, and post-incident analysis.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for databaseSynchronization: Database mirroring, replication, and synchronization technologies are actively used to ensure continuous data protection and rapid recovery capabilities.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for webFiltering: We use advanced web-filtering technology to block and monitor access to high-risk or malicious websites, updated continuously based on threat intelligence.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for encryptionVerification: Regular audits and verification processes confirm that no client data remains unencrypted at rest or in transit, with quarterly validation checks.
[2025-04-29T13:41:04.691Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for clientDataSegregation: We implement strict logical and physical segregation of client data through virtual networks, dedicated servers, and secure data storage areas.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for tlsEncryptionStandards: Client data in transit is encrypted using modern protocols equivalent to TLS 1.2 or greater, regularly audited for compliance with security standards.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for endpointMalwareScanning: Endpoint devices, including servers, laptops, and workstations, are protected by regularly updated antivirus and antimalware software with automated scanning enabled.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for emailMalwareScanning: Email attachments and embedded links are automatically scanned for malware and phishing threats using advanced email security solutions.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for threatIntelligence: We maintain active subscriptions and partnerships with leading cyber threat intelligence agencies to stay updated on emerging threats.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for impactAnalysis: A detailed Business Impact Analysis (BIA) is conducted annually, defining recovery priorities, resource requirements, and acceptable downtime for critical operations.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for realisticTesting: We use realistic business-disruption scenarios during our annual continuity exercises to verify our capability to meet defined recovery objectives.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for riskAssessment: We conduct information security risk assessments bi-annually, identifying and mitigating emerging risks.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for riskBasedControls: Our cybersecurity team updates security controls quarterly based on outcomes of periodic risk assessments to stay within our risk tolerance.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentReporting: Cyber incidents and threats are reported promptly through structured channels, ensuring rapid communication internally and externally, supported by regular updates.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for keyManagementStrategy: A centralized cryptographic key management system securely stores and regularly rotates encryption keys, following industry best practices.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentPlanTesting: We test our incident management plan annually through scenario-based simulations and tabletop exercises, documenting outcomes and improvements.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentManagementPlan: Our incident management plan is comprehensively documented, covering detection, response, communication, and recovery procedures, and reviewed annually.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentCoordination: Incident response involves coordinated efforts between internal teams, external stakeholders, and, if necessary, engagement with law enforcement authorities.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentPlanUpdates: Incident response plans are reviewed and updated quarterly, integrating insights from real incidents, threat intelligence, and best practices shared by industry partners.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentEscalation: Incident escalation protocols are clearly documented, outlining specific thresholds, escalation paths, and communication responsibilities for various incident levels.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentRoles: Our incident response program clearly specifies team roles, decision-making authorities, and escalation paths, documented and reviewed bi-annually.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentResponse: Our incident response plan is reviewed quarterly by our security team and formally approved annually by senior management following a comprehensive audit.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentContainmentSpeed: Cybersecurity incidents are contained and mitigated promptly through predefined procedures, with actions initiated within 1 hour of detection.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for forensicSupport: Our cybersecurity team possesses dedicated forensic investigation tools and specialists to thoroughly examine and respond to incidents promptly.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for clientIncidentNotification: Clients are notified promptly about security incidents affecting their data through secure communication channels, including incident details and mitigation steps.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for logRetention: We maintain immediate access to the most recent three months of activity and security event logs, stored securely and reviewed frequently.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cyberInvestigation: Cyber events undergo thorough analysis within 24 hours to identify root cause, scope, damage assessment, and preventive recommendations.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for vulnerabilityRootCause: Root cause analysis of vulnerabilities is conducted systematically, with outcomes documented and used proactively to reduce future occurrences.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for disruptionRisk: Risk assessments are performed annually to evaluate potential disruptions, documenting risks and mitigation measures as part of our resiliency program.
[2025-04-29T13:41:04.692Z] [INFO] [KY3PRoutes] KY3P Demo auto-fill data generated {"fieldCount":120,"taskId":"662"}
1:41:04 PM [info] GET /api/ky3p/demo-autofill/662 304 in 178ms :: {"externalSystems":"Our external information systems inventory is updated mon...
[2025-04-29T13:41:04.902Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
1:41:08 PM [info] GET /api/companies/current 304 in 32ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[2025-04-29T13:41:15.726Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:41:15.726Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
1:41:15 PM [info] POST /api/ky3p/batch-update/662 200 in 10884ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
1:41:15 PM [info] POST /api/tasks/662/ky3p-batch-update 200 in 38ms
[2025-04-29T13:41:16.087Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field externalSystems
[2025-04-29T13:41:16.095Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field breachNotification
[2025-04-29T13:41:16.095Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field publicPrivacyNotice
[2025-04-29T13:41:16.118Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field privacyIncidentProcedure
[2025-04-29T13:41:16.128Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field privacyLawCompliance
[2025-04-29T13:41:16.181Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field dataRetentionLimits
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 244ms :: {"success":true,"message":"Successfully updated field: externalSystems"}
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 252ms :: {"success":true,"message":"Successfully updated field: breachNotification"}
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 268ms :: {"success":true,"message":"Successfully updated field: publicPrivacyNotice"}
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 260ms :: {"success":true,"message":"Successfully updated field: privacyIncidentProcedu...
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 270ms :: {"success":true,"message":"Successfully updated field: privacyLawCompliance"}
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 236ms :: {"success":true,"message":"Successfully updated field: dataRetentionLimits"}
[Auth] Using cached user data: 290
[2025-04-29T13:41:16.480Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field personalDataMinimization
[2025-04-29T13:41:16.491Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field dataMinimizationTechniques
[2025-04-29T13:41:16.511Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field dpoAppointment
[2025-04-29T13:41:16.540Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field developmentLifecycle
[2025-04-29T13:41:16.569Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field secureCodeReviews
[2025-04-29T13:41:16.584Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field codeScanning
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 205ms :: {"success":true,"message":"Successfully updated field: personalDataMinimizati...
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 220ms :: {"success":true,"message":"Successfully updated field: dataMinimizationTechni...
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 238ms :: {"success":true,"message":"Successfully updated field: dpoAppointment"}
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 233ms :: {"success":true,"message":"Successfully updated field: developmentLifecycle"}
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 212ms :: {"success":true,"message":"Successfully updated field: secureCodeReviews"}
1:41:16 PM [info] POST /api/ky3p-fields/662/update 200 in 198ms :: {"success":true,"message":"Successfully updated field: codeScanning"}
[2025-04-29T13:41:16.837Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field developerAccessControls
[Auth] Using cached user data: 290
[2025-04-29T13:41:16.866Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field backupRecoveryDocument
[2025-04-29T13:41:16.973Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field cyberLiabilityInsurance
[2025-04-29T13:41:16.974Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field dataLocationTracking
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 165ms :: {"success":true,"message":"Successfully updated field: developerAccessControls"}
[2025-04-29T13:41:17.003Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field logicalAccess
[2025-04-29T13:41:17.005Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field alternateFacilities
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 187ms :: {"success":true,"message":"Successfully updated field: backupRecoveryDocument"}
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 204ms :: {"success":true,"message":"Successfully updated field: cyberLiabilityInsurance"}
[2025-04-29T13:41:17.179Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field detectionSystems
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 205ms :: {"success":true,"message":"Successfully updated field: logicalAccess"}
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 236ms :: {"success":true,"message":"Successfully updated field: dataLocationTracking"}
[2025-04-29T13:41:17.211Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field disasterRecoveryTesting
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 246ms :: {"success":true,"message":"Successfully updated field: alternateFacilities"}
[2025-04-29T13:41:17.324Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field appVulnerabilityScanning
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 155ms :: {"success":true,"message":"Successfully updated field: detectionSystems"}
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 146ms :: {"success":true,"message":"Successfully updated field: disasterRecoveryTesting"}
[2025-04-29T13:41:17.374Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field testingIssueTracking
[2025-04-29T13:41:17.392Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field cloudDataRetrieval
[2025-04-29T13:41:17.422Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field recoverySystemsUpdate
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 150ms :: {"success":true,"message":"Successfully updated field: appVulnerabilityScanni...
[2025-04-29T13:41:17.517Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field webApplicationSecurity
[2025-04-29T13:41:17.525Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field technicalResilience
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 180ms :: {"success":true,"message":"Successfully updated field: testingIssueTracking"}
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 199ms :: {"success":true,"message":"Successfully updated field: cloudDataRetrieval"}
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 169ms :: {"success":true,"message":"Successfully updated field: recoverySystemsUpdate"}
[2025-04-29T13:41:17.630Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field externalDependencyResilience
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 160ms :: {"success":true,"message":"Successfully updated field: webApplicationSecurity"}
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 157ms :: {"success":true,"message":"Successfully updated field: technicalResilience"}
[2025-04-29T13:41:17.707Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field backupProcessTesting
[2025-04-29T13:41:17.740Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field penetrationTesting
[2025-04-29T13:41:17.756Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentContainment
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 144ms :: {"success":true,"message":"Successfully updated field: externalDependencyResi...
[WebSocket] Received ping
[2025-04-29T13:41:17.833Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field privacyPolicyDocument
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 138ms :: {"success":true,"message":"Successfully updated field: backupProcessTesting"}
[2025-04-29T13:41:17.864Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field policyAcknowledgement
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 164ms :: {"success":true,"message":"Successfully updated field: penetrationTesting"}
[2025-04-29T13:41:17.933Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field changeManagement
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 177ms :: {"success":true,"message":"Successfully updated field: incidentContainment"}
1:41:17 PM [info] POST /api/ky3p-fields/662/update 200 in 166ms :: {"success":true,"message":"Successfully updated field: privacyPolicyDocument"}
[2025-04-29T13:41:18.027Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field remoteMfa
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 166ms :: {"success":true,"message":"Successfully updated field: policyAcknowledgement"}
[2025-04-29T13:41:18.061Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field securityPolicy
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 133ms :: {"success":true,"message":"Successfully updated field: changeManagement"}
[2025-04-29T13:41:18.101Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field changeAuditTrail
[2025-04-29T13:41:18.152Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field regulatoryCompliance
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 132ms :: {"success":true,"message":"Successfully updated field: remoteMfa"}
[2025-04-29T13:41:18.199Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field dataRetentionGovernance
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 161ms :: {"success":true,"message":"Successfully updated field: securityPolicy"}
[2025-04-29T13:41:18.230Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field acceptableUse
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 163ms :: {"success":true,"message":"Successfully updated field: changeAuditTrail"}
[2025-04-29T13:41:18.311Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field centralizedAuthentication
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 191ms :: {"success":true,"message":"Successfully updated field: regulatoryCompliance"}
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 175ms :: {"success":true,"message":"Successfully updated field: dataRetentionGovernance"}
[2025-04-29T13:41:18.396Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field dataClassificationGovernance
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 172ms :: {"success":true,"message":"Successfully updated field: acceptableUse"}
[2025-04-29T13:41:18.430Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field iamGovernance
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 127ms :: {"success":true,"message":"Successfully updated field: centralizedAuthenticat...
[2025-04-29T13:41:18.495Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field cloudSecurityRequirements
[2025-04-29T13:41:18.536Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field threatManagementGovernance
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 178ms :: {"success":true,"message":"Successfully updated field: dataClassificationGove...
[2025-04-29T13:41:18.576Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field amlGovernance
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 177ms :: {"success":true,"message":"Successfully updated field: iamGovernance"}
[2025-04-29T13:41:18.639Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field antiFraudGovernance
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 214ms :: {"success":true,"message":"Successfully updated field: cloudSecurityRequireme...
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 202ms :: {"success":true,"message":"Successfully updated field: threatManagementGovern...
[2025-04-29T13:41:18.740Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field loggingGovernance
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 195ms :: {"success":true,"message":"Successfully updated field: amlGovernance"}
[2025-04-29T13:41:18.772Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field encryptionGovernance
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 164ms :: {"success":true,"message":"Successfully updated field: antiFraudGovernance"}
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 130ms :: {"success":true,"message":"Successfully updated field: loggingGovernance"}
[2025-04-29T13:41:18.894Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field transactionAuthentication
[2025-04-29T13:41:18.901Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field equipmentRedundancy
1:41:18 PM [info] POST /api/ky3p-fields/662/update 200 in 139ms :: {"success":true,"message":"Successfully updated field: encryptionGovernance"}
[Auth] Using cached user data: 290
[2025-04-29T13:41:18.925Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field passwordVisibility
[2025-04-29T13:41:18.967Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field privilegedUserLogs
[2025-04-29T13:41:19.028Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field physicalMfa
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 183ms :: {"success":true,"message":"Successfully updated field: transactionAuthenticat...
[2025-04-29T13:41:19.097Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field executiveCyberTraining
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 217ms :: {"success":true,"message":"Successfully updated field: equipmentRedundancy"}
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 195ms :: {"success":true,"message":"Successfully updated field: passwordVisibility"}
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 200ms :: {"success":true,"message":"Successfully updated field: privilegedUserLogs"}
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 189ms :: {"success":true,"message":"Successfully updated field: physicalMfa"}
[2025-04-29T13:41:19.226Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field complianceTraining
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 147ms :: {"success":true,"message":"Successfully updated field: executiveCyberTraining"}
[2025-04-29T13:41:19.266Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field developerTraining
[2025-04-29T13:41:19.275Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field annualSecurityTraining
[2025-04-29T13:41:19.353Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field accountCompromise
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 136ms :: {"success":true,"message":"Successfully updated field: complianceTraining"}
[2025-04-29T13:41:19.397Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field passwordPolicies
[2025-04-29T13:41:19.415Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field defaultPasswords
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 161ms :: {"success":true,"message":"Successfully updated field: developerTraining"}
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 165ms :: {"success":true,"message":"Successfully updated field: annualSecurityTraining"}
[2025-04-29T13:41:19.515Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field deviceAccessMonitoring
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 190ms :: {"success":true,"message":"Successfully updated field: accountCompromise"}
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 180ms :: {"success":true,"message":"Successfully updated field: passwordPolicies"}
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 163ms :: {"success":true,"message":"Successfully updated field: defaultPasswords"}
[2025-04-29T13:41:19.582Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field crisisTeamAvailability
[2025-04-29T13:41:19.609Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field vendorContracts
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 165ms :: {"success":true,"message":"Successfully updated field: deviceAccessMonitoring"}
[2025-04-29T13:41:19.707Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field staffResilience
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 131ms :: {"success":true,"message":"Successfully updated field: crisisTeamAvailability"}
[2025-04-29T13:41:19.735Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field vendorBcmReview
[2025-04-29T13:41:19.743Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field pandemicResponse
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 156ms :: {"success":true,"message":"Successfully updated field: vendorContracts"}
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 136ms :: {"success":true,"message":"Successfully updated field: staffResilience"}
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 139ms :: {"success":true,"message":"Successfully updated field: pandemicResponse"}
1:41:19 PM [info] POST /api/ky3p-fields/662/update 200 in 148ms :: {"success":true,"message":"Successfully updated field: vendorBcmReview"}
[2025-04-29T13:41:19.891Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field continuityTesting
[2025-04-29T13:41:19.911Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field resiliencePolicy
[2025-04-29T13:41:19.914Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field bcpRolesResponsibilities
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 140ms :: {"success":true,"message":"Successfully updated field: continuityTesting"}
[2025-04-29T13:41:20.035Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field crisisManagementPlan
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 132ms :: {"success":true,"message":"Successfully updated field: resiliencePolicy"}
[2025-04-29T13:41:20.059Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field bcpPolicyReview
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 154ms :: {"success":true,"message":"Successfully updated field: bcpRolesResponsibiliti...
[2025-04-29T13:41:20.073Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field bcpCommunicationPlan
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 142ms :: {"success":true,"message":"Successfully updated field: crisisManagementPlan"}
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 137ms :: {"success":true,"message":"Successfully updated field: bcpPolicyReview"}
[2025-04-29T13:41:20.202Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field continuityTraining
[2025-04-29T13:41:20.206Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field crisisTeamRoles
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 155ms :: {"success":true,"message":"Successfully updated field: bcpCommunicationPlan"}
[2025-04-29T13:41:20.230Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field assetRetrieval
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 121ms :: {"success":true,"message":"Successfully updated field: continuityTraining"}
[2025-04-29T13:41:20.354Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field cloudInteroperability
[2025-04-29T13:41:20.357Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field immutableRecoveryData
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 131ms :: {"success":true,"message":"Successfully updated field: assetRetrieval"}
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 181ms :: {"success":true,"message":"Successfully updated field: crisisTeamRoles"}
[2025-04-29T13:41:20.415Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field powerBackup
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 132ms :: {"success":true,"message":"Successfully updated field: cloudInteroperability"}
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 130ms :: {"success":true,"message":"Successfully updated field: immutableRecoveryData"}
[2025-04-29T13:41:20.505Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field securityExceptions
[2025-04-29T13:41:20.528Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field wirelessSegmentation
[2025-04-29T13:41:20.572Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field standardChangeControl
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 184ms :: {"success":true,"message":"Successfully updated field: powerBackup"}
[2025-04-29T13:41:20.661Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field emergingTechnologies
[2025-04-29T13:41:20.665Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field recoveryObjectives
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 189ms :: {"success":true,"message":"Successfully updated field: securityExceptions"}
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 169ms :: {"success":true,"message":"Successfully updated field: wirelessSegmentation"}
[2025-04-29T13:41:20.756Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field criticalOperations
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 190ms :: {"success":true,"message":"Successfully updated field: standardChangeControl"}
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 155ms :: {"success":true,"message":"Successfully updated field: emergingTechnologies"}
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 159ms :: {"success":true,"message":"Successfully updated field: recoveryObjectives"}
[2025-04-29T13:41:20.847Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field fraudActivityReporting
[2025-04-29T13:41:20.855Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field cybersecurityRoles
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 148ms :: {"success":true,"message":"Successfully updated field: criticalOperations"}
[2025-04-29T13:41:20.915Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field insuranceCoverage
1:41:20 PM [info] POST /api/ky3p-fields/662/update 200 in 129ms :: {"success":true,"message":"Successfully updated field: fraudActivityReporting"}
[Auth] Using cached user data: 290
[2025-04-29T13:41:20.978Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field networkRedundancy
[2025-04-29T13:41:21.004Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field dataLossPrevention
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 154ms :: {"success":true,"message":"Successfully updated field: cybersecurityRoles"}
[2025-04-29T13:41:21.064Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field dataLossGovernance
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 158ms :: {"success":true,"message":"Successfully updated field: insuranceCoverage"}
[2025-04-29T13:41:21.140Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field activityLogging
[2025-04-29T13:41:21.175Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentDocumentation
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 201ms :: {"success":true,"message":"Successfully updated field: networkRedundancy"}
[2025-04-29T13:41:21.243Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field databaseSynchronization
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 183ms :: {"success":true,"message":"Successfully updated field: dataLossGovernance"}
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 306ms :: {"success":true,"message":"Successfully updated field: dataLossPrevention"}
[2025-04-29T13:41:21.336Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field webFiltering
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 227ms :: {"success":true,"message":"Successfully updated field: activityLogging"}
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 198ms :: {"success":true,"message":"Successfully updated field: incidentDocumentation"}
[2025-04-29T13:41:21.398Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field encryptionVerification
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 185ms :: {"success":true,"message":"Successfully updated field: databaseSynchronization"}
[Auth] Using cached user data: 290
[2025-04-29T13:41:21.458Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field clientDataSegregation
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 127ms :: {"success":true,"message":"Successfully updated field: webFiltering"}
[2025-04-29T13:41:21.513Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field tlsEncryptionStandards
[2025-04-29T13:41:21.527Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field endpointMalwareScanning
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 148ms :: {"success":true,"message":"Successfully updated field: encryptionVerification"}
[2025-04-29T13:41:21.605Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field emailMalwareScanning
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 176ms :: {"success":true,"message":"Successfully updated field: clientDataSegregation"}
[2025-04-29T13:41:21.635Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field threatIntelligence
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 170ms :: {"success":true,"message":"Successfully updated field: endpointMalwareScanning"}
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 192ms :: {"success":true,"message":"Successfully updated field: tlsEncryptionStandards"}
[2025-04-29T13:41:21.727Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field impactAnalysis
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 164ms :: {"success":true,"message":"Successfully updated field: emailMalwareScanning"}
[2025-04-29T13:41:21.789Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field realisticTesting
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 155ms :: {"success":true,"message":"Successfully updated field: threatIntelligence"}
[2025-04-29T13:41:21.847Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field riskAssessment
[2025-04-29T13:41:21.868Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field riskBasedControls
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 152ms :: {"success":true,"message":"Successfully updated field: impactAnalysis"}
[2025-04-29T13:41:21.932Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentReporting
1:41:21 PM [info] POST /api/ky3p-fields/662/update 200 in 155ms :: {"success":true,"message":"Successfully updated field: realisticTesting"}
[2025-04-29T13:41:21.963Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field keyManagementStrategy
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 190ms :: {"success":true,"message":"Successfully updated field: riskAssessment"}
[2025-04-29T13:41:22.057Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentPlanTesting
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 200ms :: {"success":true,"message":"Successfully updated field: riskBasedControls"}
[Auth] Using cached user data: 290
[2025-04-29T13:41:22.102Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentManagementPlan
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 190ms :: {"success":true,"message":"Successfully updated field: incidentReporting"}
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 166ms :: {"success":true,"message":"Successfully updated field: keyManagementStrategy"}
[2025-04-29T13:41:22.188Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentCoordination
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 134ms :: {"success":true,"message":"Successfully updated field: incidentPlanTesting"}
[2025-04-29T13:41:22.224Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentPlanUpdates
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 151ms :: {"success":true,"message":"Successfully updated field: incidentManagementPlan"}
[2025-04-29T13:41:22.281Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentEscalation
[2025-04-29T13:41:22.289Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentRoles
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 155ms :: {"success":true,"message":"Successfully updated field: incidentCoordination"}
[2025-04-29T13:41:22.350Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentResponse
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 179ms :: {"success":true,"message":"Successfully updated field: incidentPlanUpdates"}
[2025-04-29T13:41:22.413Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field incidentContainmentSpeed
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 181ms :: {"success":true,"message":"Successfully updated field: incidentEscalation"}
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 190ms :: {"success":true,"message":"Successfully updated field: incidentRoles"}
[Auth] Using cached user data: 290
[2025-04-29T13:41:22.513Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field forensicSupport
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 164ms :: {"success":true,"message":"Successfully updated field: incidentResponse"}
[2025-04-29T13:41:22.551Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field clientIncidentNotification
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 148ms :: {"success":true,"message":"Successfully updated field: incidentContainmentSpe...
[2025-04-29T13:41:22.609Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field logRetention
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 125ms :: {"success":true,"message":"Successfully updated field: forensicSupport"}
[2025-04-29T13:41:22.640Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field cyberInvestigation
[2025-04-29T13:41:22.672Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field vulnerabilityRootCause
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 154ms :: {"success":true,"message":"Successfully updated field: clientIncidentNotifica...
[2025-04-29T13:41:22.731Z] [INFO] [KY3P-Field-Update] Processing field update for task 662, field disruptionRisk
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 178ms :: {"success":true,"message":"Successfully updated field: logRetention"}
[Current Company] Fetching company for user: { userId: 290, companyId: 248 }
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 178ms :: {"success":true,"message":"Successfully updated field: cyberInvestigation"}
[Current Company] Found company: {
  id: 248,
  name: 'DevTest37',
  onboardingCompleted: false,
  riskScore: null,
  chosenScore: null,
  isDemo: true
}
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 181ms :: {"success":true,"message":"Successfully updated field: vulnerabilityRootCause"}
1:41:22 PM [info] GET /api/companies/current 304 in 90ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
1:41:22 PM [info] POST /api/ky3p-fields/662/update 200 in 178ms :: {"success":true,"message":"Successfully updated field: disruptionRisk"}
[2025-04-29T13:41:23.057Z] [INFO] [KY3PRoutes] KY3P Demo auto-fill requested for task {"taskId":"662","userId":290}
[2025-04-29T13:41:23.207Z] [INFO] [KY3PRoutes] Fetched fields for KY3P demo auto-fill {"fieldCount":120,"taskId":"662"}
[KY3P Demo Auto-Fill] First 5 fields from database:
[KY3P Demo Auto-Fill] Raw field objects: [
  {
    id: 1,
    field_key: 'externalSystems',
    display_name: 'External Systems',
    field_type: 'TEXTAREA',
    question: 'Describe how your organization maintains and updates its inventory of external information systems.',
    group: 'Development',
    required: false,
    order: 1,
    step_index: 0,
    validation_rules: 'NULL',
    help_text: 'List external systems maintained by your organization clearly.',
    demo_autofill: 'Our external information systems inventory is updated monthly and validated through automated discovery tools and manual audits.'
  },
  {
    id: 2,
    field_key: 'breachNotification',
    display_name: 'Breach Notification',
    field_type: 'TEXTAREA',
    question: 'Explain the process your organization follows to notify data controllers promptly upon becoming aware of a privacy data breach.',
    group: 'Development',
    required: false,
    order: 2,
    step_index: 0,
    validation_rules: 'NULL',
    help_text: 'Summarize your protocol for notifying controllers after privacy breaches.',
    demo_autofill: "Controllers are promptly notified of privacy data breaches within 24 hours of our organization's awareness, including detailed incident information and remediation steps."
  },
  {
    id: 3,
    field_key: 'privacyIncidentProcedure',
    display_name: 'Privacy Incident Procedure',
    field_type: 'TEXTAREA',
    question: "Detail your organization's formal procedures for reporting and responding to privacy-related incidents.",
    group: 'Development',
    required: false,
    order: 3,
    step_index: 0,
    validation_rules: 'NULL',
    help_text: 'Explain your process for handling security incidents.',
    demo_autofill: 'Formal procedures are in place for reporting, managing, and responding to privacy-related incidents, ensuring prompt and appropriate actions are taken.'
  },
  {
    id: 4,
    field_key: 'publicPrivacyNotice',
    display_name: 'Public Privacy Notice',
    field_type: 'TEXTAREA',
    question: 'Describe how your organization provides publicly accessible privacy notices or policies at all points of personal data collection and processing.',
    group: 'Development',
    required: false,
    order: 4,
    step_index: 0,
    validation_rules: 'NULL',
    help_text: 'Describe how clearly you communicate privacy practices to users.',
    demo_autofill: 'Privacy notices and policies are publicly accessible at every point where personal data is collected, stored, processed, or transmitted, clearly detailing usage and rights.'
  },
  {
    id: 5,
    field_key: 'privacyLawCompliance',
    display_name: 'Privacy Law Compliance',
    field_type: 'TEXTAREA',
    question: "Explain how your organization's privacy policies and standards are designed to protect customer privacy and comply with global and local privacy regulations (e.g., GDPR, CCPA, CPPA, GLBA).",
    group: 'Development',
    required: false,
    order: 5,
    step_index: 0,
    validation_rules: 'NULL',
    help_text: 'Detail your processes to ensure compliance with privacy laws.',
    demo_autofill: 'Privacy policies and standards are fully compliant with global and regional privacy laws, including GDPR, CCPA, CPPA, and GLBA, supported by regular compliance audits.'
  }
]
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for externalSystems: Our external information systems inventory is updated monthly and validated through automated discovery tools and manual audits.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for breachNotification: Controllers are promptly notified of privacy data breaches within 24 hours of our organization's awareness, including detailed incident information and remediation steps.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for privacyIncidentProcedure: Formal procedures are in place for reporting, managing, and responding to privacy-related incidents, ensuring prompt and appropriate actions are taken.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for publicPrivacyNotice: Privacy notices and policies are publicly accessible at every point where personal data is collected, stored, processed, or transmitted, clearly detailing usage and rights.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for privacyLawCompliance: Privacy policies and standards are fully compliant with global and regional privacy laws, including GDPR, CCPA, CPPA, and GLBA, supported by regular compliance audits.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataRetentionLimits: Personal data is retained only as long as required to fulfill the explicit purposes for which it was collected, after which it is securely destroyed.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for personalDataMinimization: Collection and processing of personal data are strictly limited to essential business purposes, following clearly documented data minimization principles.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataMinimizationTechniques: Data minimization is enforced through technical measures such as pseudonymization, anonymization, and strong encryption practices in line with privacy regulations.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dpoAppointment: A Data Protection Officer (DPO) has been formally appointed, responsible for overseeing compliance and ensuring informed consent mechanisms, including clear consent withdrawal procedures.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for developmentLifecycle: Our System Development Lifecycle (SDLC) includes defined stages: requirements gathering, secure development, rigorous testing, deployment, and post-release maintenance.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for secureCodeReviews: Secure source code reviews are performed regularly to ensure developers follow established secure coding standards and practices prior to deployment.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for codeScanning: Static and dynamic source code scanning tools are used during development cycles and prior to deployment to identify and remediate security vulnerabilities.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for developerAccessControls: Developer access to production environments is strictly controlled and monitored, restricted by role-based permissions and audited regularly.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for backupRecoveryDocument: Our backup and recovery documentation clearly defines requirements and procedures for system backups, data restoration, and data integrity checks.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cyberLiabilityInsurance: We hold Cyber Liability, Network Security, and Privacy Liability Insurance with coverage adequate to mitigate potential cyber incident impacts.
[2025-04-29T13:41:23.208Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataLocationTracking: Cloud data locations are tracked and documented through automated asset management tools and regular manual validations.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for alternateFacilities: We regularly test connectivity, recovery time objectives, and system capacity at alternate recovery sites through annual resilience exercises.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for logicalAccess: Logical access is granted only after managerial approval, with regular access reviews conducted quarterly to confirm continued business justification.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for detectionSystems: Notifications from detection systems trigger immediate investigation protocols managed by our 24/7 security operations center (SOC).
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for disasterRecoveryTesting: Comprehensive disaster recovery tests covering all critical technology components are conducted annually, with results documented and improvements identified.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for appVulnerabilityScanning: Application vulnerability scans are conducted quarterly and immediately after significant application changes, identifying and mitigating vulnerabilities promptly.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for testingIssueTracking: Issues identified during continuity tests are documented, tracked through resolution, and addressed with specific action plans and targeted completion dates.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cloudDataRetrieval: Cloud service customers can securely retrieve their data using encrypted application programming interfaces (APIs), supporting interoperability and easy portability.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for recoverySystemsUpdate: Recovery documentation and systems at alternate sites are promptly updated following production system and business process changes.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for webApplicationSecurity: Application-layer security measures include Web Application Firewalls (WAFs) and proxy services, providing protection against common web-based threats.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for technicalResilience: Technical resilience mechanisms employed include load balancing, failover clustering, and hot-swappable hardware to ensure continuous operations under adverse conditions.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for externalDependencyResilience: Critical external dependencies and business partners are integrated into our resilience strategy, participating in joint planning and periodic exercises.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for backupProcessTesting: Backup and replication processes are thoroughly tested quarterly, including full-system recoveries, to validate their effectiveness and reliability.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for penetrationTesting: Application penetration tests are performed annually and after significant updates, utilizing independent third-party testing to validate application security.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentContainment: We maintain documented containment strategies tailored to various incident scenarios, enabling rapid isolation and mitigation of security threats.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for privacyPolicyDocument: Our written privacy policy outlines data collection practices, usage, sharing, retention periods, and individuals' rights regarding their personal data.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for policyAcknowledgement: Employees must formally acknowledge the acceptable use policy electronically before receiving access to company systems and data.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for changeManagement: Our change management program includes documented policies, formal review processes, and clearly defined change authorization responsibilities.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for remoteMfa: Multifactor authentication (MFA) is mandated for all remote network access, using secure methods such as mobile authenticator apps or hardware tokens.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for securityPolicy: Our organization maintains documented cybersecurity policies covering data protection, access control, and incident response, reviewed and updated annually.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for changeAuditTrail: A detailed audit trail of all system changes is maintained, including timestamps, authorizations, justifications, and rollback procedures.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for regulatoryCompliance: Cybersecurity strategies are explicitly aligned with applicable legal and regulatory requirements, including regular compliance audits and reporting.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataRetentionGovernance: Data retention governance is documented, outlining policies, schedules, responsibilities, and processes for secure data storage, retention, and timely disposal.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for acceptableUse: Our acceptable use governance document covers permitted technology use, restrictions, and user responsibilities, communicated clearly to all employees.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for centralizedAuthentication: Centralized account management uses Active Directory and Single Sign-On (SSO) solutions to manage credentials securely, encrypting them both at rest and in transit.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataClassificationGovernance: Data governance and classification policies define data sensitivity levels, handling requirements, and access control measures across all organizational assets.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for iamGovernance: Our identity and access management (IAM) governance document clearly defines user access provisioning, management, and de-provisioning procedures.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cloudSecurityRequirements: Cloud service infrastructure security requirements and virtualization practices are documented, reviewed annually, and aligned with industry best practices.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for threatManagementGovernance: Threat and vulnerability management governance is documented, outlining processes for identification, assessment, prioritization, and mitigation of security threats.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for amlGovernance: Our anti-money laundering (AML) governance is documented and enforced through clearly defined procedures, ongoing employee training, and regular compliance checks.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for antiFraudGovernance: Anti-fraud governance measures include detailed policies, controls, monitoring systems, employee training, and clear reporting procedures.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for loggingGovernance: Logging program governance documents the procedures and standards for capturing, reviewing, and retaining system logs, supporting incident investigations and compliance reporting.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for encryptionGovernance: Our encryption program governance specifies encryption standards, protocols, and procedures for managing cryptographic implementations across our environment.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for transactionAuthentication: Transaction authentication processes employ advanced, secure methods such as multifactor authentication and transaction verification codes to prevent fraud and errors.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for equipmentRedundancy: Critical business equipment has redundant counterparts independently located at a separate, industry-standard minimum distance.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for passwordVisibility: Password fields during login processes are concealed, encrypted, and obscured to prevent accidental disclosure or viewing by unauthorized individuals.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for privilegedUserLogs: Privileged user activities are logged, regularly reviewed, and monitored closely for anomalies or unauthorized actions.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for physicalMfa: Physical access at data-handling locations requires multifactor authentication with unique identification badges and biometric verification.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for executiveCyberTraining: Executive cybersecurity training is provided annually, highlighting current threats, strategic risks, and governance responsibilities for senior management.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for complianceTraining: Compliance-related training sessions are provided quarterly, covering critical regulations, ethical standards, and procedural compliance requirements.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for annualSecurityTraining: All employees complete cybersecurity awareness training annually, covering phishing, password security, and information handling best practices.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for developerTraining: Developers, including subcontractors, complete mandatory secure development training annually, emphasizing secure coding practices and vulnerability prevention.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for accountCompromise: Suspected account compromises trigger immediate password resets, account reviews, and security incident investigations to mitigate further risk.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for passwordPolicies: Password policies conform to industry best practices, requiring complexity, periodic changes, and preventing reuse across all systems handling client data.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for defaultPasswords: Default passwords are immediately changed, and unnecessary default accounts are disabled before any system deployment or configuration in production environments.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for deviceAccessMonitoring: We utilize advanced network monitoring tools and endpoint protection solutions to detect, monitor, and control access to devices, connections, and data transfers.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for crisisTeamAvailability: The crisis response team is staffed on a 24/7/365 basis, supported by trained alternates and robust escalation protocols.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for vendorContracts: Contractual agreements with critical subcontractors explicitly define and enforce compliance with our established resilience standards and expectations.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for staffResilience: Our resilience program includes remote work options, employee assistance services, and clear communication channels to support staff during disruptions.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for pandemicResponse: Our resilience measures explicitly include pandemic management plans, protocols for infectious disease outbreaks, natural event responses, and workforce absenteeism contingencies.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for vendorBcmReview: Subcontractors' resilience programs are reviewed annually to verify alignment with our standards and recovery objectives through audits and contractual obligations.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for continuityTesting: Comprehensive business continuity tests are documented annually for all facilities and services processing client data, ensuring consistent operational readiness.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for resiliencePolicy: Our resilience policies cover comprehensive business continuity and disaster recovery measures, documented and enforced across all critical operational sites.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for bcpRolesResponsibilities: Our business continuity plan explicitly defines personnel roles, responsibilities, and skills required for effective response and recovery during disruptions.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for crisisManagementPlan: Our crisis management plan clearly outlines response actions, communication protocols, and coordination strategies across all client data-handling locations.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for bcpPolicyReview: The business continuity and recovery policy undergoes a comprehensive review and formal approval annually to ensure it reflects our current operational environment.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for bcpCommunicationPlan: The business continuity communication plan clearly specifies methods, channels, and responsibilities for communicating with internal and external stakeholders during events.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for continuityTraining: Employees undergo annual training covering their business continuity responsibilities, roles during disruptions, and familiarization with continuity plans.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for crisisTeamRoles: Crisis response team roles and responsibilities are clearly documented and reviewed semi-annually, ensuring clarity at all business process levels.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for assetRetrieval: Assets from terminated employees and subcontractors are collected and inventoried on or before their last day, ensuring accurate reconciliation.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cloudInteroperability: Our resiliency approach specifically addresses cloud service portability, interoperability, and exit strategies to mitigate vendor lock-in risks.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for immutableRecoveryData: Immutable instances of recovery data are maintained using secure, air-gapped storage solutions, protected from modification or unauthorized access.
[2025-04-29T13:41:23.209Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for powerBackup: Business-critical equipment is supported by multiple power sources, including backup generators and redundant power grids, routinely maintained and tested quarterly.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for securityExceptions: We manage exceptions through a centralized registry, reviewed monthly to ensure timely mitigation.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for wirelessSegmentation: Non-production and guest wireless networks are segregated from production systems through logical network isolation and firewall rules.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for standardChangeControl: All system and operational changes undergo a standardized change control review process, documented and approved through our automated tracking system.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for emergingTechnologies: We integrate cybersecurity considerations at the beginning of the evaluation phase for emerging technologies, following our defined security framework.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for recoveryObjectives: Our RPO ensures data integrity by limiting potential data loss to less than one hour, fully aligning with our defined 4-hour RTO.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for criticalOperations: Our critical operational objectives include restoring service functionality within 4 hours and maintaining data integrity with minimal data loss.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for fraudActivityReporting: Suspected and confirmed fraud activities are promptly reported and communicated to affected clients using structured reporting processes and secure channels.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cybersecurityRoles: Roles and responsibilities within our cybersecurity team are clearly documented, updated annually, and communicated during onboarding and ongoing training.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for insuranceCoverage: Our organization maintains comprehensive insurance coverage, including liability, property damage, cybersecurity, and operational risk insurance.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for networkRedundancy: We employ diverse telecommunication carriers, redundant network pathways, and scalable circuits designed around risk assessments and operational requirements.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataLossPrevention: Our DLP measures include endpoint monitoring, real-time alerts, and automatic prevention to detect and prevent unauthorized access or data leakage.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for dataLossGovernance: Information and data loss prevention governance is documented, with clear policies, detection mechanisms, and periodic training for employees.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for activityLogging: User activities across all critical systems and applications are logged and monitored continuously to detect and respond to suspicious behavior.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentDocumentation: Cybersecurity incidents are systematically documented and reported, including incident timelines, actions taken, and post-incident analysis.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for databaseSynchronization: Database mirroring, replication, and synchronization technologies are actively used to ensure continuous data protection and rapid recovery capabilities.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for webFiltering: We use advanced web-filtering technology to block and monitor access to high-risk or malicious websites, updated continuously based on threat intelligence.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for encryptionVerification: Regular audits and verification processes confirm that no client data remains unencrypted at rest or in transit, with quarterly validation checks.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for clientDataSegregation: We implement strict logical and physical segregation of client data through virtual networks, dedicated servers, and secure data storage areas.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for tlsEncryptionStandards: Client data in transit is encrypted using modern protocols equivalent to TLS 1.2 or greater, regularly audited for compliance with security standards.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for endpointMalwareScanning: Endpoint devices, including servers, laptops, and workstations, are protected by regularly updated antivirus and antimalware software with automated scanning enabled.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for emailMalwareScanning: Email attachments and embedded links are automatically scanned for malware and phishing threats using advanced email security solutions.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for threatIntelligence: We maintain active subscriptions and partnerships with leading cyber threat intelligence agencies to stay updated on emerging threats.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for impactAnalysis: A detailed Business Impact Analysis (BIA) is conducted annually, defining recovery priorities, resource requirements, and acceptable downtime for critical operations.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for realisticTesting: We use realistic business-disruption scenarios during our annual continuity exercises to verify our capability to meet defined recovery objectives.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for riskAssessment: We conduct information security risk assessments bi-annually, identifying and mitigating emerging risks.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for riskBasedControls: Our cybersecurity team updates security controls quarterly based on outcomes of periodic risk assessments to stay within our risk tolerance.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentReporting: Cyber incidents and threats are reported promptly through structured channels, ensuring rapid communication internally and externally, supported by regular updates.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for keyManagementStrategy: A centralized cryptographic key management system securely stores and regularly rotates encryption keys, following industry best practices.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentPlanTesting: We test our incident management plan annually through scenario-based simulations and tabletop exercises, documenting outcomes and improvements.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentManagementPlan: Our incident management plan is comprehensively documented, covering detection, response, communication, and recovery procedures, and reviewed annually.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentCoordination: Incident response involves coordinated efforts between internal teams, external stakeholders, and, if necessary, engagement with law enforcement authorities.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentPlanUpdates: Incident response plans are reviewed and updated quarterly, integrating insights from real incidents, threat intelligence, and best practices shared by industry partners.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentEscalation: Incident escalation protocols are clearly documented, outlining specific thresholds, escalation paths, and communication responsibilities for various incident levels.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentRoles: Our incident response program clearly specifies team roles, decision-making authorities, and escalation paths, documented and reviewed bi-annually.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentResponse: Our incident response plan is reviewed quarterly by our security team and formally approved annually by senior management following a comprehensive audit.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for incidentContainmentSpeed: Cybersecurity incidents are contained and mitigated promptly through predefined procedures, with actions initiated within 1 hour of detection.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for forensicSupport: Our cybersecurity team possesses dedicated forensic investigation tools and specialists to thoroughly examine and respond to incidents promptly.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for clientIncidentNotification: Clients are notified promptly about security incidents affecting their data through secure communication channels, including incident details and mitigation steps.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for logRetention: We maintain immediate access to the most recent three months of activity and security event logs, stored securely and reviewed frequently.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for cyberInvestigation: Cyber events undergo thorough analysis within 24 hours to identify root cause, scope, damage assessment, and preventive recommendations.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for vulnerabilityRootCause: Root cause analysis of vulnerabilities is conducted systematically, with outcomes documented and used proactively to reduce future occurrences.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] [KY3P Demo Auto-Fill] Used database value for disruptionRisk: Risk assessments are performed annually to evaluate potential disruptions, documenting risks and mitigation measures as part of our resiliency program.
[2025-04-29T13:41:23.210Z] [INFO] [KY3PRoutes] KY3P Demo auto-fill data generated {"fieldCount":120,"taskId":"662"}
1:41:23 PM [info] GET /api/ky3p/demo-autofill/662 304 in 185ms :: {"externalSystems":"Our external information systems inventory is updated mon...
[2025-04-29T13:41:23.422Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[2025-04-29T13:41:23.422Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:41:23.423Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":0,"fieldKeys":""}
1:41:23 PM [info] POST /api/ky3p/batch-update/662 200 in 70ms :: {"success":true,"processedCount":0,"message":"Successfully processed 0 field ...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:23.546Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:23.657Z' }
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:23.684Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:23.684Z',
  clientCount: 3
}
1:41:23 PM [info] POST /api/ky3p/responses/662/bulk 200 in 38ms
[Task Reconciliation] Fetching KY3P responses for task 662
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:23.716Z'
}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:23 PM [info] POST /api/tasks/662/update-progress 200 in 208ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:23.775Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:23.775Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:23.805Z'
}
1:41:23 PM [info] POST /api/tasks/662/update-progress 200 in 179ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:23.837Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:23.867Z'
}
1:41:23 PM [info] GET /api/tasks.json/662 200 in 63ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:25.064Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:41:25 PM [info] POST /api/ky3p/responses/662/bulk 200 in 37ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:25.190Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:25.190Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:25.220Z'
}
1:41:25 PM [info] POST /api/tasks/662/update-progress 200 in 188ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[2025-04-29T13:41:25.278Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:25.339Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:25.369Z'
}
1:41:25 PM [info] GET /api/tasks.json/662 200 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:26.529Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:26 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:26.658Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:26.658Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:26.688Z'
}
1:41:26 PM [info] POST /api/tasks/662/update-progress 200 in 192ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:26.813Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:26.844Z'
}
1:41:26 PM [info] GET /api/tasks.json/662 200 in 62ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:28.037Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Auth] Using cached user data: 290
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:28 PM [info] POST /api/ky3p/responses/662/bulk 200 in 46ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:28.162Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:28.162Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:28.193Z'
}
1:41:28 PM [info] POST /api/tasks/662/update-progress 200 in 190ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:28.312Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:28.340Z'
}
1:41:28 PM [info] GET /api/tasks.json/662 200 in 60ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:29.557Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:29 PM [info] POST /api/ky3p/responses/662/bulk 200 in 48ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:29.675Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:29.675Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:29.709Z'
}
1:41:29 PM [info] POST /api/tasks/662/update-progress 200 in 183ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:29.825Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:29.855Z'
}
1:41:29 PM [info] GET /api/tasks.json/662 200 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Auth] Deserializing user: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:31.078Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:31 PM [info] POST /api/ky3p/responses/662/bulk 200 in 67ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:31.214Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:31.215Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:31.244Z'
}
1:41:31 PM [info] POST /api/tasks/662/update-progress 200 in 198ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:31.361Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:31.391Z'
}
1:41:31 PM [info] GET /api/tasks.json/662 200 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:32.562Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:32.681Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:32.681Z',
  clientCount: 3
}
1:41:32 PM [info] POST /api/ky3p/responses/662/bulk 200 in 38ms
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:32.710Z'
}
1:41:32 PM [info] POST /api/tasks/662/update-progress 200 in 180ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:32.827Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:32.856Z'
}
1:41:32 PM [info] GET /api/tasks.json/662 200 in 60ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:41:33 PM [info] GET /api/companies/current 304 in 34ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:34.062Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:34 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:34.185Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:34.185Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:34.214Z'
}
1:41:34 PM [info] POST /api/tasks/662/update-progress 200 in 182ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:34.337Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:34.367Z'
}
1:41:34 PM [info] GET /api/tasks.json/662 200 in 62ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:35.564Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:35 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:35.681Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:35.681Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:35.711Z'
}
1:41:35 PM [info] POST /api/tasks/662/update-progress 200 in 178ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:35.831Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:35.859Z'
}
1:41:35 PM [info] GET /api/tasks.json/662 200 in 60ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:37.064Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:37.183Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:37.183Z',
  clientCount: 3
}
1:41:37 PM [info] POST /api/ky3p/responses/662/bulk 200 in 37ms
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:37.212Z'
}
1:41:37 PM [info] POST /api/tasks/662/update-progress 200 in 180ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[2025-04-29T13:41:37.278Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:41:37.278Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
1:41:37 PM [info] POST /api/ky3p/batch-update/662 200 in 12063ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:37.336Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:37.366Z'
}
1:41:37 PM [info] GET /api/tasks.json/662 200 in 63ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:37.585Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:37 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:37.702Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:37.702Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:37.732Z'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:37.751Z' }
1:41:37 PM [info] POST /api/tasks/662/update-progress 200 in 177ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[2025-04-29T13:41:37.879Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:37.886Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:37.886Z',
  clientCount: 3
}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:37.888Z'
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:37.918Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:37.919Z'
}
1:41:37 PM [info] GET /api/tasks.json/662 200 in 70ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:41:37 PM [info] POST /api/tasks/662/update-progress 200 in 210ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:38.570Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:38 PM [info] POST /api/ky3p/responses/662/bulk 200 in 40ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:38.693Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:38.693Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:38.723Z'
}
1:41:38 PM [info] POST /api/tasks/662/update-progress 200 in 186ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:38.837Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:38.868Z'
}
1:41:38 PM [info] GET /api/tasks.json/662 200 in 70ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:40.098Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:40.227Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:40.227Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:40.261Z'
}
1:41:40 PM [info] POST /api/ky3p/responses/662/bulk 200 in 56ms
1:41:40 PM [info] POST /api/tasks/662/update-progress 200 in 194ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:40.485Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:40.517Z'
}
1:41:40 PM [info] GET /api/tasks.json/662 200 in 66ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:41.600Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:41 PM [info] POST /api/ky3p/responses/662/bulk 200 in 38ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:41.721Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:41.722Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:41.753Z'
}
1:41:41 PM [info] POST /api/tasks/662/update-progress 200 in 184ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:41.909Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:41.952Z'
}
1:41:41 PM [info] GET /api/tasks.json/662 200 in 75ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:43.084Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:43 PM [info] POST /api/ky3p/responses/662/bulk 200 in 51ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:43.228Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:43.228Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:43.266Z'
}
1:41:43 PM [info] GET /api/companies/current 304 in 37ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
1:41:43 PM [info] POST /api/tasks/662/update-progress 200 in 214ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:43.376Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:43.406Z'
}
1:41:43 PM [info] GET /api/tasks.json/662 200 in 62ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:44.604Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:44 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:44.727Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:44.727Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:44.759Z'
}
1:41:44 PM [info] POST /api/tasks/662/update-progress 200 in 187ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:45.123Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:45.153Z'
}
1:41:45 PM [info] GET /api/tasks.json/662 200 in 70ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:46.108Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Auth] Using cached user data: 290
1:41:46 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:46.245Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:46.245Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:46.275Z'
}
1:41:46 PM [info] POST /api/tasks/662/update-progress 200 in 205ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:46.396Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:46.426Z'
}
1:41:46 PM [info] GET /api/tasks.json/662 200 in 68ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:47.610Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:47 PM [info] POST /api/ky3p/responses/662/bulk 200 in 38ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:47.739Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:47.739Z',
  clientCount: 3
}
[WebSocket] Received ping
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:47.779Z'
}
1:41:47 PM [info] POST /api/tasks/662/update-progress 200 in 202ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:47.898Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:47.935Z'
}
1:41:47 PM [info] GET /api/tasks.json/662 200 in 70ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[2025-04-29T13:41:48.851Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:41:48.851Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
1:41:48 PM [info] POST /api/ky3p/batch-update/662 200 in 11032ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:49.166Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:49.257Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:49.288Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:49.288Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:49.317Z'
}
1:41:49 PM [info] POST /api/tasks/662/update-progress 200 in 182ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:49 PM [info] POST /api/ky3p/responses/662/bulk 200 in 44ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:49.388Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:49.388Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:49.420Z'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:49.424Z' }
1:41:49 PM [info] POST /api/tasks/662/update-progress 200 in 194ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Task Reconciliation] Fetching KY3P responses for task 662
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:49.486Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:49.520Z'
}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:49 PM [info] GET /api/tasks.json/662 200 in 69ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[2025-04-29T13:41:49.556Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:49.560Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:49.560Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:49.592Z'
}
1:41:49 PM [info] POST /api/tasks/662/update-progress 200 in 212ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:50.728Z' }
1:41:50 PM [info] POST /api/ky3p/responses/662/bulk 200 in 43ms
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:50.876Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:50.876Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:50.924Z'
}
1:41:50 PM [info] POST /api/tasks/662/update-progress 200 in 229ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:51.035Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:51.067Z'
}
1:41:51 PM [info] GET /api/tasks.json/662 200 in 65ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:52.122Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:52 PM [info] POST /api/ky3p/responses/662/bulk 200 in 38ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:52.244Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:52.245Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:52.276Z'
}
1:41:52 PM [info] POST /api/tasks/662/update-progress 200 in 191ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:52.404Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:52.441Z'
}
1:41:52 PM [info] GET /api/tasks.json/662 200 in 71ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:41:53 PM [info] GET /api/companies/current 304 in 34ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:53.628Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:53 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:53.753Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:53.753Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:53.789Z'
}
1:41:53 PM [info] POST /api/tasks/662/update-progress 200 in 195ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:53.907Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:53.938Z'
}
1:41:53 PM [info] GET /api/tasks.json/662 200 in 64ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:55.136Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:55 PM [info] POST /api/ky3p/responses/662/bulk 200 in 41ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:55.261Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:55.262Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:55.293Z'
}
1:41:55 PM [info] POST /api/tasks/662/update-progress 200 in 190ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:55.420Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:55.451Z'
}
1:41:55 PM [info] GET /api/tasks.json/662 200 in 63ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:56.632Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:56 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:56.761Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:56.761Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:56.792Z'
}
1:41:56 PM [info] POST /api/tasks/662/update-progress 200 in 191ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:56.909Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:56.941Z'
}
1:41:56 PM [info] GET /api/tasks.json/662 200 in 67ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:58.133Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:41:58 PM [info] POST /api/ky3p/responses/662/bulk 200 in 41ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:58.269Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:58.269Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:58.302Z'
}
1:41:58 PM [info] POST /api/tasks/662/update-progress 200 in 204ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:58.421Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:58.454Z'
}
1:41:58 PM [info] GET /api/tasks.json/662 200 in 65ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:41:59.654Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:41:59 PM [info] POST /api/ky3p/responses/662/bulk 200 in 37ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:41:59.796Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:41:59.796Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:41:59.828Z'
}
1:41:59 PM [info] POST /api/tasks/662/update-progress 200 in 206ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:41:59.946Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:41:59.976Z'
}
1:42:00 PM [info] GET /api/tasks.json/662 200 in 63ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[2025-04-29T13:42:00.290Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:42:00.291Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
1:42:00 PM [info] POST /api/ky3p/batch-update/662 200 in 10794ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:00.605Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:00 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:00.736Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:00.737Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:00.766Z'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:00.780Z' }
1:42:00 PM [info] POST /api/tasks/662/update-progress 200 in 193ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:00.887Z'
}
[2025-04-29T13:42:00.914Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:00.917Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:00.917Z',
  clientCount: 3
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:00.918Z'
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:00.950Z'
}
1:42:00 PM [info] GET /api/tasks.json/662 200 in 64ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:42:00 PM [info] POST /api/tasks/662/update-progress 200 in 204ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:01.149Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:01 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:01.288Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:01.288Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:01.323Z'
}
1:42:01 PM [info] POST /api/tasks/662/update-progress 200 in 225ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:01.442Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:01.474Z'
}
1:42:01 PM [info] GET /api/tasks.json/662 200 in 69ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:02.667Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:02 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:02.800Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:02.800Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:02.831Z'
}
1:42:02 PM [info] POST /api/tasks/662/update-progress 200 in 198ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:02.958Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:02.990Z'
}
1:42:03 PM [info] GET /api/tasks.json/662 200 in 67ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:42:03 PM [info] GET /api/companies/current 304 in 33ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:04.159Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:04 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:04.290Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:04.290Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:04.322Z'
}
1:42:04 PM [info] POST /api/tasks/662/update-progress 200 in 195ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:04.440Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:04.473Z'
}
1:42:04 PM [info] GET /api/tasks.json/662 200 in 64ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:05.767Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:42:05 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:05.905Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:05.905Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:05.937Z'
}
1:42:05 PM [info] POST /api/tasks/662/update-progress 200 in 202ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:06.059Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:06.097Z'
}
1:42:06 PM [info] GET /api/tasks.json/662 200 in 71ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:07.181Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:07.305Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:07.305Z',
  clientCount: 3
}
1:42:07 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:07.346Z'
}
1:42:07 PM [info] POST /api/tasks/662/update-progress 200 in 199ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:07.455Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:07.486Z'
}
1:42:07 PM [info] GET /api/tasks.json/662 200 in 63ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:08.669Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:08 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:08.809Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:08.809Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:08.840Z'
}
1:42:08 PM [info] POST /api/tasks/662/update-progress 200 in 205ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:08.966Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:08.997Z'
}
1:42:09 PM [info] GET /api/tasks.json/662 200 in 64ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:10.181Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:10 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:10.308Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:10.308Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:10.338Z'
}
1:42:10 PM [info] POST /api/tasks/662/update-progress 200 in 189ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:10.458Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:10.490Z'
}
1:42:10 PM [info] GET /api/tasks.json/662 200 in 67ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:11.689Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:11 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:11.820Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:11.820Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:11.852Z'
}
1:42:11 PM [info] POST /api/tasks/662/update-progress 200 in 198ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:11.974Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:12.005Z'
}
1:42:12 PM [info] GET /api/tasks.json/662 200 in 64ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[2025-04-29T13:42:12.257Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:42:12.257Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
1:42:12 PM [info] POST /api/ky3p/batch-update/662 200 in 11402ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:12.585Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:12 PM [info] POST /api/ky3p/responses/662/bulk 200 in 38ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:12.708Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:12.708Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:12.742Z'
}
1:42:12 PM [info] POST /api/tasks/662/update-progress 200 in 190ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:12.865Z'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:12.871Z' }
[2025-04-29T13:42:12.874Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:12.896Z'
}
[Task Reconciliation] Fetching KY3P responses for task 662
1:42:12 PM [info] GET /api/tasks.json/662 200 in 65ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:12.999Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:12.999Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:13.032Z'
}
1:42:13 PM [info] POST /api/tasks/662/update-progress 200 in 203ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:13.181Z' }
[Auth] Using cached user data: 290
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:13.199Z'
}
[Task Reconciliation] Fetching KY3P responses for task 662
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:13.230Z'
}
1:42:13 PM [info] GET /api/tasks.json/662 200 in 65ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:42:13 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:13.334Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:13.334Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:13.372Z'
}
1:42:13 PM [info] POST /api/tasks/662/update-progress 200 in 221ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Auth] Using cached user data: 290
1:42:13 PM [info] GET /api/companies/current 304 in 31ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:14.686Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:14 PM [info] POST /api/ky3p/responses/662/bulk 200 in 33ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:14.818Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:14.818Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:14.859Z'
}
1:42:14 PM [info] POST /api/tasks/662/update-progress 200 in 206ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:14.967Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:14.998Z'
}
1:42:15 PM [info] GET /api/tasks.json/662 200 in 65ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:16.234Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:42:16 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:16.370Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:16.370Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:16.401Z'
}
1:42:16 PM [info] POST /api/tasks/662/update-progress 200 in 201ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:16.521Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:16.554Z'
}
1:42:16 PM [info] GET /api/tasks.json/662 200 in 64ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:17.700Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[WebSocket] Received ping
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:17 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:17.821Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:17.821Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:17.855Z'
}
1:42:17 PM [info] POST /api/tasks/662/update-progress 200 in 193ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:17.985Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:18.020Z'
}
1:42:18 PM [info] GET /api/tasks.json/662 200 in 72ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[WebSocket] Received ping
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:19.213Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:19 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:19.340Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:19.340Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:19.378Z'
}
1:42:19 PM [info] POST /api/tasks/662/update-progress 200 in 196ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:19.491Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:19.529Z'
}
1:42:19 PM [info] GET /api/tasks.json/662 200 in 70ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:20.708Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:20 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:20.834Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:20.834Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:20.865Z'
}
1:42:20 PM [info] POST /api/tasks/662/update-progress 200 in 189ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:20.984Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:21.017Z'
}
1:42:21 PM [info] GET /api/tasks.json/662 200 in 69ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:22.228Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:22 PM [info] POST /api/ky3p/responses/662/bulk 200 in 33ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:22.351Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:22.351Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:22.383Z'
}
1:42:22 PM [info] POST /api/tasks/662/update-progress 200 in 190ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:22.499Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:22.531Z'
}
1:42:22 PM [info] GET /api/tasks.json/662 200 in 65ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:23.712Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:23 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:23.833Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:23.833Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:23.867Z'
}
1:42:23 PM [info] POST /api/tasks/662/update-progress 200 in 186ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:23.993Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:24.023Z'
}
1:42:24 PM [info] GET /api/tasks.json/662 200 in 74ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Current Company] Fetching company for user: { userId: 290, companyId: 248 }
[Current Company] Found company: {
  id: 248,
  name: 'DevTest37',
  onboardingCompleted: false,
  riskScore: null,
  chosenScore: null,
  isDemo: true
}
1:42:24 PM [info] GET /api/companies/current 304 in 60ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[2025-04-29T13:42:25.011Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:42:25.011Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
1:42:25 PM [info] POST /api/ky3p/batch-update/662 200 in 12200ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:25.237Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:25.369Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:25.369Z',
  clientCount: 3
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:25.371Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:25.400Z'
}
1:42:25 PM [info] POST /api/tasks/662/update-progress 200 in 196ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:25 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:25.497Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:25.497Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:25.527Z'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:25.545Z' }
1:42:25 PM [info] POST /api/tasks/662/update-progress 200 in 186ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:25.574Z'
}
[Task Reconciliation] Fetching KY3P responses for task 662
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:25.611Z'
}
[Auth] Using cached user data: 290
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:25 PM [info] GET /api/tasks.json/662 200 in 73ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[2025-04-29T13:42:25.657Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:25.674Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:25.674Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:25.711Z'
}
1:42:25 PM [info] POST /api/tasks/662/update-progress 200 in 198ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:26.739Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:26 PM [info] POST /api/ky3p/responses/662/bulk 200 in 33ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:26.865Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:26.865Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:26.896Z'
}
1:42:26 PM [info] POST /api/tasks/662/update-progress 200 in 188ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:27.017Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:27.046Z'
}
1:42:27 PM [info] GET /api/tasks.json/662 200 in 60ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:28.235Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:28 PM [info] POST /api/ky3p/responses/662/bulk 200 in 37ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:28.368Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:28.368Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:28.407Z'
}
1:42:28 PM [info] POST /api/tasks/662/update-progress 200 in 208ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:28.524Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:28.557Z'
}
1:42:28 PM [info] GET /api/tasks.json/662 200 in 65ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:29.749Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:29 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:29.874Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:29.874Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:29.907Z'
}
1:42:29 PM [info] POST /api/tasks/662/update-progress 200 in 190ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:30.026Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:30.057Z'
}
1:42:30 PM [info] GET /api/tasks.json/662 200 in 65ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:31.254Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:31 PM [info] POST /api/ky3p/responses/662/bulk 200 in 58ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:31.423Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:31.423Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:31.462Z'
}
1:42:31 PM [info] POST /api/tasks/662/update-progress 200 in 241ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:31.577Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:31.609Z'
}
1:42:31 PM [info] GET /api/tasks.json/662 200 in 66ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:32.760Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:32 PM [info] POST /api/ky3p/responses/662/bulk 200 in 39ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:32.892Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:32.892Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:32.923Z'
}
1:42:32 PM [info] POST /api/tasks/662/update-progress 200 in 200ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:33.266Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:33.297Z'
}
1:42:33 PM [info] GET /api/tasks.json/662 200 in 63ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:34.259Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:34 PM [info] POST /api/ky3p/responses/662/bulk 200 in 41ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:34.401Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:34.401Z',
  clientCount: 3
}
1:42:34 PM [info] GET /api/companies/current 304 in 38ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:34.436Z'
}
1:42:34 PM [info] POST /api/tasks/662/update-progress 200 in 209ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:34.597Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:34.630Z'
}
1:42:34 PM [info] GET /api/tasks.json/662 200 in 65ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:35.771Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:42:35 PM [info] POST /api/ky3p/responses/662/bulk 200 in 32ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:35.926Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:35.926Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:35.960Z'
}
1:42:35 PM [info] POST /api/tasks/662/update-progress 200 in 225ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:36.093Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:36.129Z'
}
1:42:36 PM [info] GET /api/tasks.json/662 200 in 75ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[2025-04-29T13:42:36.559Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:42:36.559Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
1:42:36 PM [info] POST /api/ky3p/batch-update/662 200 in 10968ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:36.864Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:36 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:36.991Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:36.991Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:37.026Z'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:37.050Z' }
1:42:37 PM [info] POST /api/tasks/662/update-progress 200 in 193ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Task Reconciliation] Fetching KY3P responses for task 662
[2025-04-29T13:42:37.145Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:37.183Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:37.183Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:37.222Z'
}
1:42:37 PM [info] POST /api/tasks/662/update-progress 200 in 211ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:37.269Z' }
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:37.283Z'
}
[Task Reconciliation] Fetching KY3P responses for task 662
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:37.314Z'
}
1:42:37 PM [info] GET /api/tasks.json/662 200 in 63ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:37 PM [info] POST /api/ky3p/responses/662/bulk 200 in 39ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:37.410Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:37.410Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:37.442Z'
}
1:42:37 PM [info] POST /api/tasks/662/update-progress 200 in 204ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:38.769Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:38 PM [info] POST /api/ky3p/responses/662/bulk 200 in 42ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:38.903Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:38.903Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:38.937Z'
}
1:42:38 PM [info] POST /api/tasks/662/update-progress 200 in 206ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:39.053Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:39.086Z'
}
1:42:39 PM [info] GET /api/tasks.json/662 200 in 71ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:40.281Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:42:40 PM [info] POST /api/ky3p/responses/662/bulk 200 in 37ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:40.434Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:40.434Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:40.465Z'
}
1:42:40 PM [info] POST /api/tasks/662/update-progress 200 in 215ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:40.587Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:40.617Z'
}
1:42:40 PM [info] GET /api/tasks.json/662 200 in 63ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:41.790Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:41 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:41.910Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:41.910Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:41.941Z'
}
1:42:41 PM [info] POST /api/tasks/662/update-progress 200 in 185ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:42.060Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:42.090Z'
}
1:42:42 PM [info] GET /api/tasks.json/662 200 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:43.298Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Auth] Using cached user data: 290
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:43 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:43.430Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:43.431Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:43.462Z'
}
1:42:43 PM [info] POST /api/tasks/662/update-progress 200 in 194ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:43.596Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:43.626Z'
}
1:42:43 PM [info] GET /api/tasks.json/662 200 in 68ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:42:44 PM [info] GET /api/companies/current 304 in 37ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:44.784Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:44 PM [info] POST /api/ky3p/responses/662/bulk 200 in 49ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:44.922Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:44.922Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:44.956Z'
}
1:42:44 PM [info] POST /api/tasks/662/update-progress 200 in 205ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:45.089Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:45.119Z'
}
1:42:45 PM [info] GET /api/tasks.json/662 200 in 65ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:46.314Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:46 PM [info] POST /api/ky3p/responses/662/bulk 200 in 37ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:46.443Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:46.443Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:46.475Z'
}
1:42:46 PM [info] POST /api/tasks/662/update-progress 200 in 192ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:46.603Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:46.633Z'
}
1:42:46 PM [info] GET /api/tasks.json/662 200 in 62ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:47.800Z' }
[WebSocket] Received ping
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:47 PM [info] POST /api/ky3p/responses/662/bulk 200 in 33ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:47.926Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:47.926Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:47.964Z'
}
[2025-04-29T13:42:47.976Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:42:47.976Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
1:42:48 PM [info] POST /api/tasks/662/update-progress 200 in 200ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
1:42:48 PM [info] POST /api/ky3p/batch-update/662 200 in 10898ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:48.078Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:48.108Z'
}
1:42:48 PM [info] GET /api/tasks.json/662 200 in 60ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:48.269Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:48 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:48.387Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:48.387Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:48.417Z'
}
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:48.444Z' }
1:42:48 PM [info] POST /api/tasks/662/update-progress 200 in 179ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:48.572Z'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:48.574Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:48.574Z',
  clientCount: 3
}
[2025-04-29T13:42:48.591Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:48.603Z'
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:48.607Z'
}
1:42:48 PM [info] GET /api/tasks.json/662 200 in 66ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:42:48 PM [info] POST /api/tasks/662/update-progress 200 in 195ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:49.332Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:42:49 PM [info] POST /api/ky3p/responses/662/bulk 200 in 38ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:49.455Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:49.455Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:49.485Z'
}
1:42:49 PM [info] POST /api/tasks/662/update-progress 200 in 185ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:49.601Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:49.636Z'
}
1:42:49 PM [info] GET /api/tasks.json/662 200 in 67ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:50.813Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:50 PM [info] POST /api/ky3p/responses/662/bulk 200 in 37ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:50.942Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:50.942Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:50.971Z'
}
1:42:51 PM [info] POST /api/tasks/662/update-progress 200 in 188ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:51.089Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:51.126Z'
}
1:42:51 PM [info] GET /api/tasks.json/662 200 in 67ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:52.323Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:52.443Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:52.443Z',
  clientCount: 3
}
1:42:52 PM [info] POST /api/ky3p/responses/662/bulk 200 in 37ms
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:52.474Z'
}
1:42:52 PM [info] POST /api/tasks/662/update-progress 200 in 183ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:52.590Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:52.620Z'
}
1:42:52 PM [info] GET /api/tasks.json/662 200 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:53.836Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:53 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:53.963Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:53.963Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:53.994Z'
}
1:42:54 PM [info] POST /api/tasks/662/update-progress 200 in 191ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:54.119Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:54.152Z'
}
1:42:54 PM [info] GET /api/tasks.json/662 200 in 66ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:42:54 PM [info] GET /api/companies/current 304 in 31ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:55.324Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:55 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:55.442Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:55.442Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:55.472Z'
}
1:42:55 PM [info] POST /api/tasks/662/update-progress 200 in 179ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:55.589Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:55.618Z'
}
1:42:55 PM [info] GET /api/tasks.json/662 200 in 60ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:56.838Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Auth] Using cached user data: 290
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:56 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:56.959Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:56.959Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:56.991Z'
}
1:42:57 PM [info] POST /api/tasks/662/update-progress 200 in 184ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:57.108Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:57.138Z'
}
1:42:57 PM [info] GET /api/tasks.json/662 200 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:58.344Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:42:58 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:42:58.467Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:42:58.467Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:42:58.498Z'
}
1:42:58 PM [info] POST /api/tasks/662/update-progress 200 in 184ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Auth] Using cached user data: 290
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:42:58.613Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:42:58.644Z'
}
1:42:58 PM [info] GET /api/tasks.json/662 200 in 62ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[2025-04-29T13:42:59.855Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:42:59.855Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
1:42:59 PM [info] POST /api/ky3p/batch-update/662 200 in 11326ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:42:59.896Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:42:59 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:00.014Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:00.014Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:00.046Z'
}
1:43:00 PM [info] POST /api/tasks/662/update-progress 200 in 183ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:00.156Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:43:00 PM [info] POST /api/ky3p/responses/662/bulk 200 in 36ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:00.282Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:00.282Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:00.313Z'
}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:00.339Z'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:00.340Z' }
1:43:00 PM [info] POST /api/tasks/662/update-progress 200 in 189ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:00.370Z'
}
[Task Reconciliation] Fetching KY3P responses for task 662
1:43:00 PM [info] GET /api/tasks.json/662 200 in 64ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[2025-04-29T13:43:00.446Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:00.484Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:00.484Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:00.515Z'
}
1:43:00 PM [info] POST /api/tasks/662/update-progress 200 in 208ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:00.640Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:00.671Z'
}
1:43:00 PM [info] GET /api/tasks.json/662 200 in 66ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:01.361Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:01 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:01.498Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:01.499Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:01.529Z'
}
1:43:01 PM [info] POST /api/tasks/662/update-progress 200 in 202ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:01.646Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:01.680Z'
}
1:43:01 PM [info] GET /api/tasks.json/662 200 in 68ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:02.871Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:03.015Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:03.015Z',
  clientCount: 3
}
1:43:03 PM [info] POST /api/ky3p/responses/662/bulk 200 in 33ms
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:03.053Z'
}
1:43:03 PM [info] POST /api/tasks/662/update-progress 200 in 220ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:03.165Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:03.199Z'
}
1:43:03 PM [info] GET /api/tasks.json/662 200 in 68ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:04.378Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:43:04 PM [info] POST /api/ky3p/responses/662/bulk 200 in 31ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:04.514Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:04.514Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:04.546Z'
}
1:43:04 PM [info] POST /api/tasks/662/update-progress 200 in 205ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:04.671Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:04.706Z'
}
1:43:04 PM [info] GET /api/tasks.json/662 200 in 71ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:43:05 PM [info] GET /api/companies/current 304 in 33ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:05.868Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:05 PM [info] POST /api/ky3p/responses/662/bulk 200 in 33ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:06.008Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:06.008Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:06.044Z'
}
1:43:06 PM [info] POST /api/tasks/662/update-progress 200 in 208ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:06.167Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:06.199Z'
}
1:43:06 PM [info] GET /api/tasks.json/662 200 in 69ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:07.388Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:43:07 PM [info] POST /api/ky3p/responses/662/bulk 200 in 32ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:07.532Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:07.532Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:07.563Z'
}
1:43:07 PM [info] POST /api/tasks/662/update-progress 200 in 208ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:07.680Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:07.712Z'
}
1:43:07 PM [info] GET /api/tasks.json/662 200 in 67ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:08.883Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:08 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:09.020Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:09.020Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:09.058Z'
}
1:43:09 PM [info] POST /api/tasks/662/update-progress 200 in 208ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Auth] Using cached user data: 290
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:09.166Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:09.197Z'
}
1:43:09 PM [info] GET /api/tasks.json/662 200 in 64ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
1:43:09 PM [info] GET /api/companies/current 304 in 32ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:10.312Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
1:43:10 PM [info] POST /api/ky3p/responses/662/bulk 200 in 32ms
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:10.440Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:10.440Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:10.476Z'
}
1:43:10 PM [info] POST /api/tasks/662/update-progress 200 in 200ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:10.606Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:10.637Z'
}
1:43:10 PM [info] GET /api/tasks.json/662 200 in 67ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[2025-04-29T13:43:12.285Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:43:12.285Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
1:43:12 PM [info] POST /api/ky3p/batch-update/662 200 in 11905ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
1:43:13 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:13.437Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:13.536Z' }
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:13.562Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:13.562Z',
  clientCount: 3
}
[Task Reconciliation] Fetching KY3P responses for task 662
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:13.593Z'
}
1:43:13 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
1:43:13 PM [info] POST /api/tasks/662/update-progress 200 in 188ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:13.657Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:13.657Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:13.687Z'
}
[2025-04-29T13:43:13.698Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
1:43:13 PM [info] POST /api/tasks/662/update-progress 200 in 182ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:13.719Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:13.749Z'
}
1:43:13 PM [info] GET /api/tasks.json/662 200 in 60ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:14.946Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:15 PM [info] POST /api/ky3p/responses/662/bulk 200 in 39ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:15.065Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:15.065Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:15.097Z'
}
1:43:15 PM [info] POST /api/tasks/662/update-progress 200 in 181ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:15.211Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:15.241Z'
}
1:43:15 PM [info] GET /api/tasks.json/662 200 in 60ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:16.431Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:16 PM [info] POST /api/ky3p/responses/662/bulk 200 in 32ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:16.556Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:16.556Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:16.584Z'
}
1:43:16 PM [info] POST /api/tasks/662/update-progress 200 in 184ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:16.708Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:16.738Z'
}
1:43:16 PM [info] GET /api/tasks.json/662 200 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[WebSocket] Received ping
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:17.932Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:18 PM [info] POST /api/ky3p/responses/662/bulk 200 in 40ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:18.053Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:18.053Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:18.082Z'
}
1:43:18 PM [info] POST /api/tasks/662/update-progress 200 in 181ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:18.206Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:18.235Z'
}
1:43:18 PM [info] GET /api/tasks.json/662 200 in 59ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:19.442Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:19 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:19.560Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:19.560Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:19.590Z'
}
1:43:19 PM [info] POST /api/tasks/662/update-progress 200 in 178ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Current Company] Using cached company data: 248
1:43:19 PM [info] GET /api/companies/current 304 in 31ms :: {"id":248,"name":"DevTest37","category":"FinTech","is_demo":true,"revenue_tie...
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:19.724Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:19.757Z'
}
1:43:19 PM [info] GET /api/tasks.json/662 200 in 64ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:20.945Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:21.066Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:21.066Z',
  clientCount: 3
}
1:43:21 PM [info] POST /api/ky3p/responses/662/bulk 200 in 44ms
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:21.097Z'
}
1:43:21 PM [info] POST /api/tasks/662/update-progress 200 in 184ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:21.213Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:21.245Z'
}
1:43:21 PM [info] GET /api/tasks.json/662 200 in 64ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:22.557Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:22 PM [info] POST /api/ky3p/responses/662/bulk 200 in 33ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:22.681Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:22.681Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:22.710Z'
}
1:43:22 PM [info] POST /api/tasks/662/update-progress 200 in 186ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:22.832Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:22.863Z'
}
1:43:22 PM [info] GET /api/tasks.json/662 200 in 63ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Auth] Using cached user data: 290
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:23.952Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:24 PM [info] POST /api/ky3p/responses/662/bulk 200 in 33ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:24.076Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:24.076Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:24.107Z'
}
1:43:24 PM [info] POST /api/tasks/662/update-progress 200 in 188ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:24.231Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:24.265Z'
}
1:43:24 PM [info] GET /api/tasks.json/662 200 in 66ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:25.466Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[2025-04-29T13:43:25.533Z] [ERROR] [KY3PRoutes] [KY3P API] Error updating task progress in batch update: {}
[2025-04-29T13:43:25.534Z] [INFO] [KY3PRoutes] [KY3P API] Batch update successful for task 662: {"processedCount":120,"fieldKeys":"externalSystems, breachNotification, privacyIncidentProcedure, publicPrivacyNotice, privacyLawCompliance, dataRetentionLimits, personalDataMinimization, dataMinimizationTechniques, dpoAppointment, developmentLifecycle..."}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:25 PM [info] POST /api/ky3p/batch-update/662 200 in 11902ms :: {"success":true,"processedCount":120,"message":"Successfully processed 120 fi...
1:43:25 PM [info] POST /api/ky3p/responses/662/bulk 200 in 34ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:25.593Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:25.593Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:25.628Z'
}
1:43:25 PM [info] POST /api/tasks/662/update-progress 200 in 197ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:25.765Z' }
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:25.796Z'
}
[Task Reconciliation] Fetching KY3P responses for task 662
1:43:25 PM [info] POST /api/ky3p/responses/662/bulk 200 in 35ms
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:25.830Z'
}
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:25.853Z' }
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:25 PM [info] GET /api/tasks.json/662 200 in 67ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Task Reconciliation] Fetching KY3P responses for task 662
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:25.895Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:25.895Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:25.929Z'
}
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:25 PM [info] POST /api/tasks/662/update-progress 200 in 196ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:25.970Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:25.970Z',
  clientCount: 3
}
[2025-04-29T13:43:25.998Z] [INFO] [KY3PRoutes] [KY3P API] Received batch update request for task 662 {"requestBody":"object","requestFormat":"responses object format"}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:26.001Z'
}
1:43:26 PM [info] POST /api/tasks/662/update-progress 200 in 179ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:26.119Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',
  formDataFields: 0,
  timestamp: '2025-04-29T13:43:26.148Z'
}
1:43:26 PM [info] GET /api/tasks.json/662 200 in 61ms :: {"id":662,"title":"2. S&P KY3P Security Assessment: DevTest37","description":...
[Tasks Routes] Updating task progress: { taskId: 662, timestamp: '2025-04-29T13:43:26.954Z' }
[Task Reconciliation] Fetching KY3P responses for task 662
[Task Reconciliation] Recalculated KY3P progress: {
  taskId: 662,
  totalFields: '120',
  completedFields: '0',
  currentProgress: 0,
  calculatedProgress: 0
}
[Task Reconciliation] Updating KY3P task progress: {
  taskId: 662,
  progressFrom: 0,
  progressTo: 0,
  statusFrom: 'not_started',
  statusTo: 'not_started'
}
1:43:27 PM [info] POST /api/ky3p/responses/662/bulk 200 in 33ms
[Progress Utils] Broadcasting task progress update: {
  taskId: 662,
  progress: 0,
  requestedStatus: 'not_started',
  finalStatus: 'not_started',
  hasSubmissionDate: false,
  hasSubmittedFlag: false,
  timestamp: '2025-04-29T13:43:27.069Z'
}
[WebSocket] Broadcast "task_updated" sent to 3 clients {
  type: 'task_updated',
  dataKeys: [ 'id', 'status', 'progress', 'metadata', 'timestamp' ],
  timestamp: '2025-04-29T13:43:27.069Z',
  clientCount: 3
}
[Tasks Routes] Task progress reconciled: {
  taskId: 662,
  progress: 0,
  status: 'not_started',
  timestamp: '2025-04-29T13:43:27.098Z'
}
1:43:27 PM [info] POST /api/tasks/662/update-progress 200 in 175ms :: {"success":true,"progress":0,"status":"not_started","taskId":662}
[Tasks Routes] Fetching task by ID (special .json endpoint): {
  taskId: 662,
  userCompanyId: 248,
  timestamp: '2025-04-29T13:43:27.212Z'
}
[Tasks Routes] Task found by ID (special .json endpoint): {
  taskId: 662,
  title: '2. S&P KY3P Security Assessment: DevTest37',
  type: 'ky3p',