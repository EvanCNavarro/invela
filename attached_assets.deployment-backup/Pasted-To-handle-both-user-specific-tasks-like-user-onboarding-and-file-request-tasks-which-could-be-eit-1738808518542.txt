To handle both user-specific tasks (like user onboarding) and file request tasks (which could be either user-specific or company-wide), we can create a single flexible structure that accommodates both types of tasks. This approach keeps the design simple while being adaptable.

We will use the task_type to distinguish between "user_onboarding" tasks and "file_request" tasks. Additionally, we'll leverage dynamic fields like entity_assigned_to and task_scope to indicate whether the task is company-wide or user-specific.

Single Task Data Structure for Both Task Types (Onboarding and File Request)
Hereâ€™s the unified task structure:

Common Fields for Both Task Types
task_id (String/UUID):
Unique identifier for each task.

task_type (String):
Type of task. Could be one of:

user_onboarding
file_request
task_status (String):
Status of the task.
Example values: Pending, In Progress, Completed, Failed, Cancelled.

task_description (String):
A short description of the task.

entity_assigned_to (String/UUID):
The entity assigned to the task. This could be either:

User ID (for user-specific tasks like onboarding), or
Company ID (for company-wide tasks like file requests).
The system resolves the list of users involved if the task is company-wide.
task_scope (String):
Indicates whether the task is for a user-specific or company-wide scope.
Possible values:

User
Company
company_id (String/UUID, Nullable):
The company ID if the task is company-wide (e.g., for file requests).
Example: company_456

assigned_user_id (String/UUID, Nullable):
The user ID if the task is user-specific (e.g., for user onboarding).
Example: user_123

task_priority (String):
Priority level of the task (e.g., Low, Medium, High).

created_at (Datetime):
Timestamp when the task was created.

updated_at (Datetime):
Timestamp when the task was last updated.

due_date (Datetime):
The target date for completing the task.

completion_date (Datetime, Nullable):
Timestamp when the task was completed, if applicable.

task_progress (Decimal, Percentage):
Measurable progress for tasks that involve multiple steps.
Example: 50%

task_files_requested (Array of Strings/UUIDs, Nullable):
A list of requested files for file-related tasks. This is relevant for file requests (user or company-wide). Example: ["file_123", "file_456"]

task_files_uploaded (Array of Strings/UUIDs, Nullable):
A list of uploaded files for file-related tasks. Example: ["file_123"]

task_result (String, Nullable):
The outcome of the task.
Example values: Success, Failure, Incomplete.

task_category (String):
Category of the task (e.g., Onboarding, File Upload).

task_associated_entities (Array of Strings/UUIDs):
Links to specific entities associated with the task, such as user_id, company_id, file_id.

task_source (String):
Origin of the task.
Example values: User Action, System Triggered, Admin Action.

comments (Text, Nullable):
Any additional comments or notes relevant to the task.

task_duration (Integer, in minutes or seconds, Nullable):
Time taken to complete the task.

Key Differences for Each Task Type
1. User Onboarding Task (user-specific)
task_scope: User
assigned_user_id: The ID of the user being onboarded.
company_id: Not used (NULL or omitted for user-specific tasks).
2. File Request Task (could be either user-specific or company-wide)
task_scope: User or Company
User: The task is assigned to an individual user.
Company: The task is assigned to all users within a company.
assigned_user_id: Used only for user-specific file requests.
company_id: Used for company-wide file requests.
Example Task Records
1. User Onboarding Task (user-specific)
json
Copy
{
   "task_id": "task_001",
   "task_type": "user_onboarding",
   "task_status": "In Progress",
   "task_description": "Complete the user onboarding process.",
   "entity_assigned_to": "user_123",
   "task_scope": "User",
   "assigned_user_id": "user_123",
   "task_priority": "High",
   "created_at": "2025-02-06T08:00:00Z",
   "updated_at": "2025-02-06T09:30:00Z",
   "due_date": "2025-02-08T17:00:00Z",
   "completion_date": null,
   "task_progress": "50%",
   "task_files_requested": null,
   "task_files_uploaded": null,
   "task_result": "Pending",
   "task_category": "Onboarding",
   "task_associated_entities": ["user_123"],
   "task_source": "System Triggered",
   "comments": "N/A",
   "task_duration": null
}
2. File Request Task (user-specific)
json
Copy
{
   "task_id": "task_002",
   "task_type": "file_request",
   "task_status": "In Progress",
   "task_description": "Upload the required financial documents.",
   "entity_assigned_to": "user_123",
   "task_scope": "User",
   "assigned_user_id": "user_123",
   "company_id": null,
   "task_priority": "High",
   "created_at": "2025-02-06T08:00:00Z",
   "updated_at": "2025-02-06T09:30:00Z",
   "due_date": "2025-02-10T17:00:00Z",
   "completion_date": null,
   "task_progress": "30%",
   "task_files_requested": ["file_123", "file_456"],
   "task_files_uploaded": ["file_123"],
   "task_result": "Pending",
   "task_category": "File Upload",
   "task_associated_entities": ["user_123", "file_123"],
   "task_source": "User Action",
   "comments": "Waiting for additional files.",
   "task_duration": null
}
3. File Request Task (company-wide)
json
Copy
{
   "task_id": "task_003",
   "task_type": "file_request",
   "task_status": "Pending",
   "task_description": "All team members must upload the requested compliance files.",
   "entity_assigned_to": "company_456",
   "task_scope": "Company",
   "assigned_user_id": null,
   "company_id": "company_456",
   "task_priority": "High",
   "created_at": "2025-02-06T08:00:00Z",
   "updated_at": "2025-02-06T09:30:00Z",
   "due_date": "2025-02-10T17:00:00Z",
   "completion_date": null,
   "task_progress": "10%",
   "task_files_requested": ["file_123", "file_456"],
   "task_files_uploaded": ["file_123"],
   "task_result": "Pending",
   "task_category": "File Upload",
   "task_associated_entities": ["company_456", "file_123"],
   "task_source": "System Triggered",
   "comments": "Waiting for uploads from team members.",
   "task_duration": null
}