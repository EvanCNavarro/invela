[TaskCenter] Filtering task: 
Object {taskId: 148, status: "completed", scope: "user", activeTab: "my-tasks", userId: 130, …}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(2), isLoadingCompany: false}
[WebSocket] Connected successfully
[TaskTable] Task clicked: 
Object {id: 147, title: "Company CARD: SafetyWing", type: "company_card", status: "pending", metadata: {…}, …}
[TaskTable] Navigation preparation: 
Object {taskType: "company_card", originalTitle: "Company CARD: SafetyWing", extractedCompanyName: "SafetyWing", taskTypePrefix: "card", constructedUrl: "/task-center/task/card-SafetyWing", …}
[TaskTable] Task validation: 
Object {hasMetadata: true, hasCompanyName: true, titleMatchResult: Array(3), formattedCompanyName: "SafetyWing", timestamp: "2025-02-27T07:25:31.265Z"}
[TaskTable] Initiating navigation to: /task-center/task/card-SafetyWing
[Router] Current location: /task-center/task/card-SafetyWing
[TaskPage] Initializing with params: 
Object {taskSlug: "card-SafetyWing", taskType: "card", companyName: "SafetyWing"}
[TaskPage] Using API endpoint: 
Object {apiEndpoint: "/api/tasks/card", fullUrl: "/api/tasks/card/SafetyWing"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(2), isLoadingCompany: false}
[TaskPage] Fetching task data: 
Object {endpoint: "/api/tasks/card/SafetyWing", taskType: "card", companyName: "SafetyWing"}
[TaskPage] API response: 
Object {status: 200, ok: true, statusText: "OK"}
[TaskPage] Task data received: 
Object {taskId: 147, title: "Company CARD: SafetyWing", status: "pending", metadata: {…}}
[TaskPage] Initializing with params: 
Object {taskSlug: "card-SafetyWing", taskType: "card", companyName: "SafetyWing"}
[TaskPage] Using API endpoint: 
Object {apiEndpoint: "/api/tasks/card", fullUrl: "/api/tasks/card/SafetyWing"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(2), isLoadingCompany: false}
[CardFormPlayground] Fetching CARD fields 
Object {timestamp: "2025-02-27T07:25:31.520Z"}
[CardFormPlayground] Fetching existing responses: 
Object {taskId: 147, timestamp: "2025-02-27T07:25:31.521Z"}
[WebSocket] Connected successfully
[CardFormPlayground] Loading existing responses: 
Object {responseCount: 12, timestamp: "2025-02-27T07:25:31.829Z"}
[CardFormPlayground] Field updated: 
Object {fieldKey: "security_vulnerability_testing", hasValue: false, timestamp: "2025-02-27T07:25:34.834Z"}
[CardFormPlayground] Saving response: 
Object {taskId: 147, fieldId: 9, hasResponse: false, timestamp: "2025-02-27T07:25:34.838Z"}
[CardFormPlayground] Error saving response: 
Object {error: Error, timestamp: "2025-02-27T07:25:35.244Z"}
error: Error
timestamp: "2025-02-27T07:25:35.244Z"
[[Prototype]]: Object

at t.value (https://9606074c-a9ad-4fe1-8fe5-3d9c3eed0606-00-33ar2rv36ligj.picard.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:17465)
at new t (https://9606074c-a9ad-4fe1-8fe5-3d9c3eed0606-00-33ar2rv36ligj.picard.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:12630)
at t.value (https://9606074c-a9ad-4fe1-8fe5-3d9c3eed0606-00-33ar2rv36ligj.picard.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:32766)
at https://9606074c-a9ad-4fe1-8fe5-3d9c3eed0606-00-33ar2rv36ligj.picard.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:34400
[CardFormPlayground] Error saving empty response: 
Object {error: Error, timestamp: "2025-02-27T07:25:35.244Z"}
error: Error
timestamp: "2025-02-27T07:25:35.244Z"
[[Prototype]]: Object

[TaskPage] Initializing with params: 
Object {taskSlug: "card-SafetyWing", taskType: "card", companyName: "SafetyWing"}
[TaskPage] Using API endpoint: 
Object {apiEndpoint: "/api/tasks/card", fullUrl: "/api/tasks/card/SafetyWing"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(2), isLoadingCompany: false}
[CardFormPlayground] Validation failed: empty value
[CardFormPlayground] Validation failed: 
Object {fieldId: 9, fieldKey: "security_vulnerability_testing", valueLength: 0, hasValue: false, previousValue: "The product is a best practice, super safe product.", …}
[TaskPage] Initializing with params: 
Object {taskSlug: "card-SafetyWing", taskType: "card", companyName: "SafetyWing"}
[TaskPage] Using API endpoint: 
Object {apiEndpoint: "/api/tasks/card", fullUrl: "/api/tasks/card/SafetyWing"}
[DashboardLayout] Checking route access: 
Object {currentTab: "task-center", availableTabs: Array(2), isLoadingCompany: false}