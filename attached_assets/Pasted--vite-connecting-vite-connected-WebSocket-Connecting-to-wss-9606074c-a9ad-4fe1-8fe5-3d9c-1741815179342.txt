[vite] connecting...
[vite] connected.
[WebSocket] Connecting to: wss://9606074c-a9ad-4fe1-8fe5-3d9c3eed0606-00-33ar2rv36ligj.picard.replit.dev/ws
[CardQuestionnairePage] Component imported
[Module] Import trace: 
Object {module: "card-questionnaire-page.tsx", imports: Array(2), timestamp: "2025-03-12T21:32:39.588Z"}
imports: Array(2)
module: "card-questionnaire-page.tsx"
timestamp: "2025-03-12T21:32:39.588Z"
[[Prototype]]: Object
[CardQuestionnairePage] Import error: 
ReferenceError {}
message: "require is not defined"
stack: "ReferenceError: require is not defined↵ at https://9606074c-a9ad-4fe1-8fe5-3d9c3eed0606-00-33ar2rv36ligj.picard.replit.dev/src/pages/card-questionnaire-page.tsx:29:17"
get stack: ƒ ()
set stack: ƒ ()
[[Prototype]]: Object

[App] Component imports starting
[App] Router initialized with routes configuration
[App] Component imports starting
[App] Router initialized with routes configuration
[Router Debug] Registered routes: 
[Router Debug] Route resolution order: 
[Router Debug] Routes matching test URL: 
Object {url: "/task-center/task/card-DataTechCompany/questionnaire", matches: Array(1)}
[Router Debug] Registered routes: 
[Router Debug] Route resolution order: 
[Router Debug] Routes matching test URL: 
Object {url: "/task-center/task/card-DataTechCompany/questionnaire", matches: Array(1)}
[Router] Current location: /
[Router] Route matching: 
Object {isTaskRoute: false, isCardRoute: false, isQuestionnaireRoute: false, segments: Array(0), timestamp: "2025-03-12T21:32:39.597Z"}
[Router] Current location: /
[Router] Route matching: 
Object {isTaskRoute: false, isCardRoute: false, isQuestionnaireRoute: false, segments: Array(0), timestamp: "2025-03-12T21:32:39.597Z"}
[DashboardLayout] Waiting for company data...
[WebSocket] Connected successfully
[WebSocket] Connection established: 
Object {timestamp: "2025-03-12T21:32:39.829Z"}
[DashboardLayout] Checking route access: 
Object {currentTab: "dashboard", availableTabs: Array(2), isLoadingCompany: false}
[DashboardLayout] Checking route access: 
Object {currentTab: "dashboard", availableTabs: Array(2), isLoadingCompany: false}
[DashboardLayout] Checking route access: 
Object {currentTab: "dashboard", availableTabs: Array(2), isLoadingCompany: false}
[DashboardLayout] Route not accessible, redirecting to task-center
[Router] Current location: /task-center