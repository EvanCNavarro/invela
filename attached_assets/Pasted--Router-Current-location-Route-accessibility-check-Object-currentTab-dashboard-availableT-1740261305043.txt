[Router] Current location: /
Route accessibility check: 
Object {currentTab: "dashboard", availableTabs: Array(1), isAccessible: false}
Route accessibility check: 
Object {currentTab: "dashboard", availableTabs: Array(1), isAccessible: false}
Redirecting to task center - tab not accessible: 
Object {currentTab: "dashboard", availableTabs: undefined}
[Router] Current location: /task-center
Route accessibility check: 
Object {currentTab: "task-center", availableTabs: Array(1), isAccessible: true}
Route accessibility check: 
Object {currentTab: "task-center", availableTabs: Array(2), isAccessible: true}
[TaskCenter] Filtering task: 
Object {taskId: 128, status: "submitted", scope: "company", activeTab: "my-tasks", userId: 113, …}
[TaskCenter] Filtering task: 
Object {taskId: 129, status: "completed", scope: "user", activeTab: "my-tasks", userId: 113, …}
Route accessibility check: 
Object {currentTab: "task-center", availableTabs: Array(2), isAccessible: true}
[WebSocket] Connected successfully
[WebSocket] Connection established: 
Object {timestamp: "2025-02-22T21:54:55.875Z"}
[WebSocket] Connected successfully
[Router] Current location: /file-vault
[useUser] Current user state: 
Object {user: undefined, isLoading: true, error: null}
[FileVault] Starting file filtering with: 
Object {totalFiles: 0, searchQuery: "", statusFilter: "all", sortConfig: {…}}
[FileVault] Final filtered and sorted files: 
Object {totalFiles: 0, firstFile: undefined, lastFile: undefined}
Route accessibility check: 
Object {currentTab: "file-vault", availableTabs: Array(2), isAccessible: true}
Route accessibility check: 
Object {currentTab: "file-vault", availableTabs: Array(2), isAccessible: true}
[useUser] Current user state: 
Object {user: {…}, isLoading: false, error: null}
[FileVault] Starting file filtering with: 
Object {totalFiles: 0, searchQuery: "", statusFilter: "all", sortConfig: {…}}
[FileVault] Final filtered and sorted files: 
Object {totalFiles: 0, firstFile: undefined, lastFile: undefined}
Route accessibility check: 
Object {currentTab: "file-vault", availableTabs: Array(2), isAccessible: true}
[useUser] Current user state: 
Object {user: {…}, isLoading: false, error: null}
[FileVault] Starting file filtering with: 
Object {totalFiles: 0, searchQuery: "", statusFilter: "all", sortConfig: {…}}
[FileVault] Final filtered and sorted files: 
Object {totalFiles: 0, firstFile: undefined, lastFile: undefined}
Route accessibility check: 
Object {currentTab: "file-vault", availableTabs: Array(2), isAccessible: true}
[FileVault] Query error: 
Error {}
message: "400: {"error":"Company ID is required"}"
stack: "Error: 400: {"error":"Company ID is required"}↵ at throwIfResNotOk (https://9606074c-a9ad-4fe1-8fe5-3d9c3eed0606-00-33ar2rv36ligj.picard.replit.dev/src/lib/queryClient.ts:5:11)↵ at async https://9606074c-a9ad-4fe1-8fe5-3d9c3eed0606-00-33ar2rv36ligj.picard.replit.dev/src/lib/queryClient.ts:25:3"
get stack: ƒ ()
set stack: ƒ ()
[[Prototype]]: Object

[useUser] Current user state: 
Object {user: {…}, isLoading: false, error: null}
[FileVault] Starting file filtering with: 
Object {totalFiles: 0, searchQuery: "", statusFilter: "all", sortConfig: {…}}
[FileVault] Final filtered and sorted files: 
Object {totalFiles: 0, firstFile: undefined, lastFile: undefined}
Route accessibility check: 
Object {currentTab: "file-vault", availableTabs: Array(2), isAccessible: true}
[WebSocket] Connected successfully