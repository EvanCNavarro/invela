<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Invela</title>
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <!-- Fix for Replit preview domains - must be before any other script -->
    <script>
      /**
       * Replit Preview Domain Fix
       * 
       * This script fixes the "Blocked request. This host is not allowed" error
       * that appears when using Vite in Replit preview domains.
       */
      (function() {
        // Only apply on Replit domains
        const hostname = window.location.hostname;
        if (!hostname.includes('.replit.dev') && !hostname.includes('.repl.co')) {
          return;
        }
        
        console.log('Fixing Vite host validation for Replit domain:', hostname);
        
        // Fix 1: Disable host validation completely
        window.__vite_host_check = false;
        
        // Fix 2: Add the current domain to trusted domains
        window.__vite_plugin_trusted_types_trust_domains = {
          [hostname]: true,
          'localhost': true
        };
        
        // Fix 3: Hide any error overlay with CSS
        const style = document.createElement('style');
        style.textContent = `
          #vite-error-overlay, .vite-error-overlay {
            display: none !important;
            visibility: hidden !important;
            opacity: 0 !important;
          }
        `;
        document.head.appendChild(style);
        
        // Fix 4: Monitor and remove any error overlay that appears
        const observer = new MutationObserver(mutations => {
          mutations.forEach(mutation => {
            if (mutation.addedNodes) {
              mutation.addedNodes.forEach(node => {
                if (node.id === 'vite-error-overlay' || 
                    (node.classList && node.classList.contains('vite-error-overlay'))) {
                  node.style.display = 'none';
                  console.log('Removed Vite error overlay');
                }
              });
            }
          });
        });
        
        // Start observing as soon as the DOM is ready
        document.addEventListener('DOMContentLoaded', () => {
          observer.observe(document.body, { childList: true, subtree: true });
        });
      })();
    </script>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>